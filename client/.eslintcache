[{"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx":"1","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx":"3","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts":"4","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx":"5","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx":"6","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts":"7","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"8","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx":"9","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx":"10","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx":"11","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts":"12","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx":"13","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx":"14","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx":"15","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx":"16","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx":"17","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts":"18","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts":"19","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts":"20","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts":"21","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts":"22","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\editAtom.ts":"23","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EditScheduleForm.tsx":"24","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\DatePicker.tsx":"25","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\AddDateButton.tsx":"26","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\SubtranctDateButton.tsx":"27","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\TimePicker.tsx":"28"},{"size":903,"mtime":1669027285527,"results":"29","hashOfConfig":"30"},{"size":415,"mtime":1668991253510,"results":"31","hashOfConfig":"30"},{"size":1281,"mtime":1669099036199,"results":"32","hashOfConfig":"30"},{"size":111,"mtime":1669027285269,"results":"33","hashOfConfig":"30"},{"size":408,"mtime":1669027285729,"results":"34","hashOfConfig":"30"},{"size":574,"mtime":1669124064785,"results":"35","hashOfConfig":"30"},{"size":400,"mtime":1669027285488,"results":"36","hashOfConfig":"30"},{"size":1075,"mtime":1669105003383,"results":"37","hashOfConfig":"30"},{"size":1789,"mtime":1669167466268,"results":"38","hashOfConfig":"30"},{"size":2949,"mtime":1669122932132,"results":"39","hashOfConfig":"30"},{"size":3473,"mtime":1669110980264,"results":"40","hashOfConfig":"30"},{"size":145,"mtime":1669027285646,"results":"41","hashOfConfig":"30"},{"size":503,"mtime":1669027285598,"results":"42","hashOfConfig":"30"},{"size":3635,"mtime":1669168027675,"results":"43","hashOfConfig":"30"},{"size":844,"mtime":1669104088648,"results":"44","hashOfConfig":"30"},{"size":819,"mtime":1669027285312,"results":"45","hashOfConfig":"30"},{"size":227,"mtime":1669027317091,"results":"46","hashOfConfig":"30"},{"size":256,"mtime":1669128725971,"results":"47","hashOfConfig":"30"},{"size":90,"mtime":1669165568677,"results":"48","hashOfConfig":"30"},{"size":112,"mtime":1669027285368,"results":"49","hashOfConfig":"30"},{"size":104,"mtime":1669027285180,"results":"50","hashOfConfig":"30"},{"size":120,"mtime":1669027285551,"results":"51","hashOfConfig":"30"},{"size":122,"mtime":1669122403095,"results":"52","hashOfConfig":"30"},{"size":3307,"mtime":1669167990698,"results":"53","hashOfConfig":"30"},{"size":2763,"mtime":1669164792752,"results":"54","hashOfConfig":"30"},{"size":509,"mtime":1669164674000,"results":"55","hashOfConfig":"30"},{"size":536,"mtime":1669164763282,"results":"56","hashOfConfig":"30"},{"size":2125,"mtime":1669166964218,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"19cjhgb",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"61"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"61"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"61"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx",[],[],["156"],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx",["157"],[],"import { Panel } from \"@enact/sandstone/Panels\";\nimport Calendar from \"../../components/Calendar\";\nimport WeatherPanel from \"../WeatherPanel/WeatherPanel\";\nimport { useEffect } from \"react\";\n\nconst MainPanel = () => {\n  useEffect(() => {\n    console.log(\"mainpanel\");\n  }, []);\n\n  return (\n    <div className=\"h-full\">\n      <WeatherPanel />\n      {/*<iframe className=\"h-full w-96\" src=\"https://map.naver.com/v5/search/소몽?c=14098341.0446259,4501387.3749584,15,0,0,0,dh&isCorrectAnswer=true\"></iframe>*/}\n      <Calendar />\n    </div>\n  );\n};\n\nexport default MainPanel;\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx",["158"],[],"import { VideoPlayer } from \"@enact/sandstone/VideoPlayer\";\nimport { memo, useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\nimport { weatherState } from \"../../atoms/weatherAtom\";\n\nconst WeatherPanel = () => {\n  const selectedDate = useRecoilValue(selectedDateState);\n\n  /* 아래 데이터는 db 구축시 제거될 데이터입니다*/\n  const [weather, setWeather] = useRecoilState(weatherState);\n  const [dummyCount, setDummyCount] = useState(0);\n  const weatherList = [\"Clear\", \"Rain\", \"Clouds\", \"Snow\"];\n  useEffect(() => {\n    setDummyCount((dummyCount + 1) % 4);\n    setWeather(weatherList[dummyCount]);\n  }, [selectedDate]);\n\n  return (\n    <VideoPlayer\n      className=\"static -z-50 bg-black opacity-30\"\n      autoPlay\n      loop\n      muted\n      disabled\n    >\n      <source type=\"video/mp4\" src={`${WEATHER_BASEURL}/${weather}.mp4`} />\n    </VideoPlayer>\n  );\n};\n\nexport default memo(WeatherPanel);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx",["159","160","161"],[],"import React from \"react\";\nimport { Moment } from \"moment\";\nimport \"moment/locale/ko\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport CalendarDays from \"./CalendarDays\";\nimport CalendarBody from \"./CalendarBody\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useQuery } from \"react-query\";\nimport { Schedule } from \"../../../typing\";\nimport axios, { AxiosResponse } from \"axios\";\nimport CalendarSidebar from \"./CalendarSidebar\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { openEditFormState } from \"../../atoms/editAtom\";\nimport EditScheduleForm from \"./EditScheduleForm\";\n\nfunction Calendar() {\n  const selectedDate = useRecoilValue<Moment>(selectedDateState);\n\n  function getSchedule() {\n    return axios.get(\n      `/schedules?year=${selectedDate\n        .clone()\n        .format(\"YYYY\")}&month=${selectedDate.clone().format(\"MM\")}`\n    );\n  }\n\n  function getSheetSchedule() {\n    return axios.get(\n      `/schedules/sheet?year=${selectedDate\n        .clone()\n        .format(\"YYYY\")}&month=${selectedDate.clone().format(\"MM\")}`\n    );\n  }\n\n  const { data: scheduleList } = useQuery<Schedule[]>(\n    [\"schedules\", selectedDate.clone().format(\"YYYY MM\")],\n    () =>\n      axios.all([getSchedule(), getSheetSchedule()]).then(\n        axios.spread((res1, res2) => {\n          console.log([...res1.data, ...res2.data]);\n          return [...res1.data, ...res2.data];\n        })\n      )\n  );\n\n  return (\n    <div className=\"flex h-full\">\n      <CalendarSidebar scheduleList={scheduleList} />\n      <div className=\"flex h-full flex-1 flex-col\">\n        <CalendarHeader />\n        <CalendarDays />\n        <CalendarBody scheduleList={scheduleList} />\n      </div>\n      <EditScheduleForm />\n    </div>\n  );\n}\n\nexport default Calendar;\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx",["162","163","164","165","166","167","168"],[],"import React, { memo, useCallback, useMemo, useState } from \"react\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Link } from \"@enact/ui/Routable\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { muteState } from \"../../atoms/muteAtom\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { todayState } from \"../../atoms/todayAtom\";\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\nimport { openEditFormState } from \"../../atoms/editAtom\";\n\nfunction CalendarHeader() {\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\n  const [mute, setMute] = useRecoilState(muteState);\n  const setOpenEditForm = useSetRecoilState(openEditFormState);\n  const today = useRecoilValue(todayState);\n\n  const prevMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().subtract(1, \"months\"));\n  }, [selectedDate]);\n\n  const nextMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().add(1, \"months\"));\n  }, [selectedDate]);\n\n  const setToday = useCallback(() => {\n    setSelectedDate(today);\n  }, [today]);\n\n  const handleScheduleClick = useCallback(() => {\n    setOpenEditForm((prev) => !prev);\n  }, []);\n\n  const handleMuteClick = useCallback(() => {\n    setMute((prev) => !prev);\n  }, []);\n\n  const renderGearIcon = useMemo(() => {\n    return (\n      <Link path=\"./setting\">\n        <Icon size=\"large\" className=\"cursor-pointer hover:scale-110\">\n          gear\n        </Icon>\n      </Link>\n    );\n  }, []);\n\n  return (\n    <header className=\"flex h-[15%] w-full items-center justify-center\">\n      <div className=\"flex flex-1 items-center justify-evenly\">\n        {renderGearIcon}\n        <Icon\n          size=\"large\"\n          onClick={handleScheduleClick}\n          className=\"cursor-pointer hover:scale-110\"\n        >\n          scheduler\n        </Icon>{\" \"}\n        <Icon\n          size=\"large\"\n          onClick={handleMuteClick}\n          className=\"cursor-pointer hover:scale-110\"\n        >\n          {mute ? \"sound\" : \"soundmute\"}\n        </Icon>\n      </div>\n      <div className=\"flex flex-1 items-center justify-around\">\n        <Icon\n          onClick={prevMonth}\n          size=\"large\"\n          className=\"cursor-pointer hover:scale-125\"\n        >\n          arrowlargeleft\n        </Icon>\n        <span className=\"flex  items-center text-6xl\">\n          {selectedDate.format(\"Y.MM\")}\n        </span>\n        <Icon\n          onClick={nextMonth}\n          size=\"large\"\n          className=\"cursor-pointer hover:scale-125\"\n        >\n          arrowlargeright\n        </Icon>\n      </div>\n      <div className=\"flex flex-1 flex-nowrap\">\n        <Button size=\"small\" onClick={setToday}>\n          Today\n        </Button>\n        <Button size=\"small\">Weekly</Button>\n        <Button size=\"small\">Monthly</Button>\n      </div>\n    </header>\n  );\n}\n\nexport default memo(CalendarHeader);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx",["169","170","171","172"],[],"import React, {memo, ReactNode, useCallback, useLayoutEffect, useState,} from \"react\";\nimport {Moment} from \"moment\";\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {todayState} from \"../../atoms/todayAtom\";\nimport {Schedule} from \"../../../typing\";\nimport Markers from \"./Markers\";\nimport uuid from \"react-uuid\";\nimport {selectedDateState} from \"../../atoms/selectedDateAtom\";\nimport {sidebarState} from \"../../atoms/sidebarAtom\";\n\ninterface Props {\n  scheduleList: Schedule[] | undefined;\n}\n\nfunction CalendarBody({ scheduleList }: Props) {\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\n  const [sideBarOpen, setSideBarOpen] = useRecoilState(sidebarState);\n  const [calendar, setCalendar] = useState<ReactNode[]>([]);\n  const today = useRecoilValue(todayState);\n  // 현재 달의 첫 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const startWeekOfCurrentMonth = selectedDate.clone().startOf(\"month\").week();\n  // 현재 달의 마지막 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const lastWeekOfCurrentMonth =\n    selectedDate.clone().endOf(\"month\").week() === 1\n      ? 53\n      : selectedDate.clone().endOf(\"month\").week();\n\n  const handleClick = useCallback(\n    (date: Moment) => {\n\n      if (date.format(\"L\") === selectedDate.format(\"L\")) {\n        setSideBarOpen((prev) => !prev);\n      } else {\n        setSelectedDate(date);\n        setSideBarOpen(true);\n      }\n    },\n    [selectedDate]\n  );\n\n  useLayoutEffect(() => {\n    let newCalendar: ReactNode[] = [];\n    for (\n      let week = startWeekOfCurrentMonth;\n      week <= lastWeekOfCurrentMonth;\n      week++\n    ) {\n      newCalendar.push(\n        <div\n          key={week}\n          className=\"relative flex w-full flex-1 items-center justify-around\"\n        >\n          {Array(7)\n            .fill(0)\n            .map((n, index) => {\n              let current = selectedDate\n                .clone()\n                .week(week)\n                .startOf(\"week\")\n                .add(n + index, \"day\");\n              let markers = scheduleList?.filter((schedule) => {\n                return (\n                  schedule.day === current.format(\"DD\") &&\n                  schedule.month === current.format(\"MM\")\n                );\n              });\n\n              return (\n                <div\n                  className={`cell relative ${\n                    index === 0 && \"calendar_days_SUN\"\n                  } ${index === 6 && \"calendar_days_SAT\"} ${\n                    current.format() ===\n                    selectedDate.clone().startOf(\"day\").format()\n                      ? \"selectedDate\"\n                      : current.format() ===\n                        today.clone().startOf(\"day\").format()\n                      ? \"today\"\n                      : current.format(\"MM\") === selectedDate.format(\"MM\")\n                      ? \"\"\n                      : \"not_same_month\"\n                  } `}\n                  key={uuid()}\n                  onClick={() => handleClick(current)}\n                >\n                  {current.format(\"D\")}\n                  <Markers markers={markers} />\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n    setCalendar(newCalendar);\n  }, [selectedDate, scheduleList]);\n\n\n\n  return (\n    <div className=\"flex w-full flex-1 flex-col justify-around pb-10\">\n      {calendar}\n    </div>\n  );\n}\n\nexport default memo(CalendarBody);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx",["173"],[],"import React from \"react\";\r\n\r\nfunction CalendarDays() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex w-full h-[8%] items-center\">\r\n      {[\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"].map((days) => (\r\n        <div\r\n          key={days}\r\n          className={`w-full text-center ${\r\n            days === \"SUN\" && \"calendar_days_SUN\"\r\n          } ${days === \"SAT\" && \"calendar_days_SAT\"}`}\r\n        >\r\n          {days}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDays;\r\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx",["174","175","176","177"],[],"import moment from \"moment/moment\";\nimport React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\nimport Image from \"@enact/sandstone/Image\";\nimport CalendarTodoList from \"./CalendarTodoList\";\nimport { Schedule } from \"../../../typing\";\nimport EmptyTodo from \"./EmptyTodo\";\nimport { useRecoilValue } from \"recoil\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\nimport { weatherState } from \"../../atoms/weatherAtom\";\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\nimport uuid from \"react-uuid\";\n\ninterface Props {\n  scheduleList: Schedule[] | undefined;\n}\n\nfunction CalendarSidebar({ scheduleList }: Props) {\n  const selectedDate = useRecoilValue(selectedDateState);\n  const weather = useRecoilValue(weatherState);\n  const sideBarOpen = useRecoilValue(sidebarState);\n  const [todayScheduleList, setTodayScheduleList] = useState<Schedule[]>([]);\n  const [tomorrowScheduleList, setTomorrowScheduleList] = useState<Schedule[]>(\n    []\n  );\n  const [dayAfterTomorrowScheduleList, setDayAfterTomorrowScheduleList] =\n    useState<Schedule[]>([]);\n\n  useEffect(() => {\n    let newTodayScheduleList: Schedule[] = [];\n    let newTomorrowScheduleList: Schedule[] = [];\n    let newDayAfterTomorrowScheduleList: Schedule[] = [];\n\n    scheduleList?.forEach((schedule) => {\n      if (schedule.day === selectedDate.format(\"DD\")) {\n        newTodayScheduleList.push(schedule);\n      } else if (\n        Number(schedule.day) ===\n        Number(selectedDate.clone().add(1, \"day\").format(\"DD\"))\n      ) {\n        newTomorrowScheduleList.push(schedule);\n      } else if (\n        Number(schedule.day) ===\n        Number(selectedDate.clone().add(2, \"day\").format(\"DD\"))\n      ) {\n        newDayAfterTomorrowScheduleList.push(schedule);\n      }\n    });\n    setTodayScheduleList(newTodayScheduleList);\n    setTomorrowScheduleList(newTomorrowScheduleList);\n    setDayAfterTomorrowScheduleList(newDayAfterTomorrowScheduleList);\n  }, [selectedDate, scheduleList]);\n\n  const renderTodoList = useCallback((list: Schedule[], number: number) => {\n    return (\n      <React.Fragment key={uuid()}>\n        <h1 className=\"todoList_title\">\n          {selectedDate\n            .clone()\n            .add(number, \"day\")\n            .locale(\"en\")\n            .format(\"MMM, D\")}\n          &nbsp; TODO\n        </h1>\n        {list.length > 0\n          ? list.map((schedule) => (\n              <CalendarTodoList key={uuid()} schedule={schedule} />\n            ))\n          : renderEmptyTodo}\n      </React.Fragment>\n    );\n  }, []);\n\n  const renderEmptyTodo = useMemo(() => <EmptyTodo />, []);\n\n  return (\n    <div\n      className={` h-full overflow-hidden whitespace-nowrap transition-all duration-700 ease-in-out ${\n        sideBarOpen ? \"w-80\" : \"w-0\"\n      }`}\n    >\n      <div className=\"relative flex aspect-video h-44 flex-col justify-end\">\n        <img src={`${WEATHER_BASEURL}/${weather}.jpg`} className=\"opacity-70\" />\n        <div className=\"absolute bottom-0 right-0 flex flex-col items-end justify-evenly p-2\">\n          <p className=\"text-4xl\">\n            {moment(selectedDate).locale(\"en-gb\").format(\"YYYY\")}\n          </p>\n          <p>{moment(selectedDate).locale(\"en\").format(\"dddd, MMMM D\")}</p>\n        </div>\n      </div>\n      <div className=\"max-h-[75%] overflow-x-hidden px-5 scrollbar-hide\">\n        {[\n          todayScheduleList,\n          tomorrowScheduleList,\n          dayAfterTomorrowScheduleList,\n        ].map((scheduleList, index) => renderTodoList(scheduleList, index))}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(CalendarSidebar);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx",["178"],[],"import React, { memo } from \"react\";\nimport { Schedule } from \"../../../typing\";\n\ninterface Props {\n  markers?: Schedule[];\n}\n\nfunction Markers({ markers }: Props) {\n  return (\n    <div className=\"scheduleMarker_container\">\n      {markers && markers?.length > 3 ? (\n        <div className=\"scheduleMarker_num\">+{markers.length}</div>\n      ) : (\n        markers?.map((marker) => (\n          <div\n            key={marker._id}\n            className={`scheduleMarker ${\n              marker.category === \"회사\"\n                ? \"bg-emerald-200\"\n                : marker.category === \"취미\"\n                ? \"bg-fuchsia-600\"\n                : marker.category === \"학교\"\n                ? \"bg-amber-300\"\n                : \"bg-gray-400\"\n            }  `}\n          ></div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default memo(Markers);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\editAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EditScheduleForm.tsx",["179","180","181","182","183","184","185","186"],[],"import React, { memo, useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { openEditFormState } from \"../../atoms/editAtom\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  selectedDateState,\n  selectedEditDateState,\n} from \"../../atoms/selectedDateAtom\";\nimport DatePicker from \"./DatePicker\";\nimport TimePicker from \"./TimePicker\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport uuid from \"react-uuid\";\n\nexport interface Inputs {\n  content: string;\n  year: string;\n  month: string;\n  day: string;\n  category: string;\n  startedTime: string;\n  endedTime: string;\n}\n\nfunction EditScheduleForm() {\n  const [openEditForm, setOpenEditForm] = useRecoilState(openEditFormState);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm<Inputs>();\n\n  const onSubmit = handleSubmit((data) => {\n    let date = `${data.year}-${data.month}-${data.day}`;\n    axios.post(\"/schedules\", {\n      content: data.content, // 내용\n      year: data.year,\n      month: data.month,\n      week: moment(date).week() - moment(date).startOf(\"month\").week() + 1,\n      day: data.day,\n      startedTime: data.startedTime, // \"23:00\"\n      endedTime: data.endedTime, // 끝 시간\n      category: data.category,\n    });\n  });\n\n  return (\n    <div\n      className={`absolute bottom-0 flex w-full flex-col overflow-hidden bg-black/80 transition-all duration-500 ${\n        openEditForm ? \"h-64 py-4\" : \"h-0 p-0\"\n      }`}\n    >\n      <h1 className=\"font-sandstone flex items-center px-3  text-2xl font-semibold\">\n        <Icon size=\"medium\">scheduler</Icon>\n        Add Schedule\n      </h1>\n      <form className=\"font-sandstone flex flex-1 px-12\" onSubmit={onSubmit}>\n        <div className=\"flex flex-1 flex-col justify-around\">\n          <label className=\"flex flex-col gap-y-2\">\n            schedule\n            <input\n              {...register(\"content\")}\n              placeholder=\"enter your schedule...\"\n              className=\"form_input\"\n            />\n          </label>\n          <div className=\"flex gap-x-6\">\n            <label className=\"flex flex-1 flex-col gap-y-2\">\n              category\n              <input\n                {...register(\"category\")}\n                placeholder=\"enter your schedule...\"\n                className=\"form_input\"\n              />\n            </label>\n            <label className=\"flex flex-1 flex-col gap-y-2\">\n              location\n              <input\n                {...register(\"category\")}\n                placeholder=\"enter your schedule...\"\n                className=\"form_input\"\n              />\n            </label>\n          </div>\n        </div>\n        <div className=\"flex flex-1 items-center justify-evenly\">\n          <label>\n            Date\n            <DatePicker setValue={setValue} />\n          </label>\n          <label>\n            start time\n            <TimePicker setValue={setValue} type=\"started\" />\n          </label>\n          <label>\n            end time\n            <TimePicker setValue={setValue} type=\"ended\" />\n          </label>\n        </div>\n        <input value=\"add\" className=\"form_input self-center\" type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default memo(EditScheduleForm);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\DatePicker.tsx",["187","188","189","190","191","192","193","194","195","196","197","198","199"],[],"import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  selectedDateState,\n  selectedEditDateState,\n} from \"../../atoms/selectedDateAtom\";\nimport { UseFormRegister, UseFormSetValue } from \"react-hook-form\";\nimport { Inputs } from \"./EditScheduleForm\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport AddDateButton from \"./AddDateButton\";\nimport { openEditFormState } from \"../../atoms/editAtom\";\nimport SubtractDateButton from \"./SubtranctDateButton\";\n\ninterface Props {\n  setValue: UseFormSetValue<Inputs>;\n}\n\nfunction DatePicker({ setValue }: Props) {\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\n  const [openEditForm, setOpenEditForm] = useRecoilState(openEditFormState);\n  const [editDate, setEditDate] = useState(selectedDate);\n  const [editDateYear, setEditDateYear] = useState<string>(\n    selectedDate.format(\"YYYY\")\n  );\n  const [editDateMonth, setEditDateMonth] = useState<string>(\n    selectedDate.format(\"MM\")\n  );\n  const [editDateDay, setEditDateDay] = useState<string>(\n    selectedDate.format(\"DD\")\n  );\n\n  useEffect(() => {\n    setEditDate(selectedDate);\n    setValue(\"year\", editDateYear);\n    setValue(\"month\", editDateMonth);\n    setValue(\"day\", editDateDay);\n  }, [openEditForm]);\n\n  useEffect(() => {\n    setEditDateYear(editDate.format(\"YYYY\"));\n    setValue(\"year\", editDate.format(\"YYYY\"));\n    setEditDateMonth(editDate.format(\"MM\"));\n    setValue(\"month\", editDate.format(\"MM\"));\n    setEditDateDay(editDate.format(\"DD\"));\n    setValue(\"day\", editDate.format(\"DD\"));\n  }, [editDate]);\n\n  const addDate = useCallback(\n    (unit: \"year\" | \"month\" | \"day\") =>\n      setEditDate((prev) => prev.clone().add(1, unit)),\n    []\n  );\n\n  const subtractDate = useCallback(\n    (unit: \"year\" | \"month\" | \"day\") =>\n      setEditDate((prev) => prev.clone().subtract(1, unit)),\n    []\n  );\n\n  return (\n    <div className=\"flex\">\n      <div className=\"flex flex-col items-center\">\n        <AddDateButton onAddClick={() => addDate(\"year\")} />\n        <div className=\"datepicker_number\">{editDateYear}</div>\n        <SubtractDateButton onSubtractClick={() => subtractDate(\"year\")} />\n      </div>\n      <div className=\"flex flex-col\">\n        <AddDateButton onAddClick={() => addDate(\"month\")} />\n        <div className=\"datepicker_number\">{editDateMonth}</div>\n        <SubtractDateButton onSubtractClick={() => subtractDate(\"month\")} />\n      </div>\n      <div className=\"flex flex-col\">\n        <AddDateButton onAddClick={() => addDate(\"day\")} />\n        <div className=\"datepicker_number\">{editDateDay}</div>\n        <SubtractDateButton onSubtractClick={() => subtractDate(\"day\")} />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(DatePicker);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\AddDateButton.tsx",["200","201","202"],[],"import React, { memo, useCallback } from \"react\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport moment from \"moment\";\nimport { UseFormSetValue } from \"react-hook-form\";\nimport { Inputs } from \"./EditScheduleForm\";\n\ninterface Props {\n  onAddClick: () => void;\n}\n\nfunction AddDateButton({ onAddClick }: Props) {\n  return (\n    <Icon\n      className=\"cursor-pointer hover:scale-110 hover:brightness-75\"\n      onClick={onAddClick}\n    >\n      triangleup\n    </Icon>\n  );\n}\n\nexport default memo(AddDateButton);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\SubtranctDateButton.tsx",["203","204","205"],[],"import React, { memo, useCallback } from \"react\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport moment from \"moment\";\nimport { UseFormSetValue } from \"react-hook-form\";\nimport { Inputs } from \"./EditScheduleForm\";\n\ninterface Props {\n  onSubtractClick: () => void;\n}\n\nfunction SubtractDateButton({ onSubtractClick }: Props) {\n  return (\n    <Icon\n      className=\"cursor-pointer hover:scale-110 hover:brightness-75\"\n      onClick={onSubtractClick}\n    >\n      triangledown\n    </Icon>\n  );\n}\n\nexport default memo(SubtractDateButton);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\TimePicker.tsx",["206","207","208","209","210","211","212","213","214"],[],"import React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  selectedDateState,\n  selectedEditDateState,\n} from \"../../atoms/selectedDateAtom\";\nimport { UseFormRegister, UseFormSetValue } from \"react-hook-form\";\nimport { Inputs } from \"./EditScheduleForm\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport AddDateButton from \"./AddDateButton\";\nimport { openEditFormState } from \"../../atoms/editAtom\";\nimport SubtractDateButton from \"./SubtranctDateButton\";\n\ninterface Props {\n  type: \"started\" | \"ended\";\n  setValue: UseFormSetValue<Inputs>;\n}\n\nfunction DatePicker({ setValue, type }: Props) {\n  const [hour, setHour] = useState(0);\n  const [minute, setMinute] = useState(0);\n\n  const addHour = useCallback(() => setHour((prev) => (prev + 1) % 24), []);\n\n  const subtractHour = useCallback(\n    () =>\n      setHour((prev) => {\n        if (prev - 1 < 0) {\n          return prev + 23;\n        }\n        return (prev - 1) % 24;\n      }),\n    []\n  );\n\n  const addMinute = useCallback(\n    () =>\n      setMinute((prev) => {\n        if (prev + 5 === 60) {\n          addHour();\n        }\n        return (prev + 5) % 60;\n      }),\n    []\n  );\n\n  const subtractMinute = useCallback(\n    () =>\n      setMinute((prev) => {\n        if (prev - 5 < 0) {\n          subtractHour();\n          return prev + 55;\n        }\n        return (prev + -5) % 60;\n      }),\n    []\n  );\n\n  useEffect(() => {\n    setValue(\n      `${type}Time`,\n      `${String(hour).padStart(2, \"0\")}:${String(minute).padStart(2, \"0\")}`\n    );\n  }, [hour, minute]);\n\n  return (\n    <div className=\"flex\">\n      <div className=\"flex flex-col items-center\">\n        <AddDateButton onAddClick={addHour} />\n        <div className=\"datepicker_number\">{hour}</div>\n        <SubtractDateButton onSubtractClick={subtractHour} />\n      </div>\n      <div className=\"flex flex-col\">\n        <AddDateButton onAddClick={addMinute} />\n        <div className=\"datepicker_number\">{minute}</div>\n        <SubtractDateButton onSubtractClick={subtractMinute} />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(DatePicker);\n",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":1,"column":10,"nodeType":"219","messageId":"220","endLine":1,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":18,"column":6,"nodeType":"223","endLine":18,"endColumn":20,"suggestions":"224"},{"ruleId":"217","severity":1,"message":"225","line":7,"column":10,"nodeType":"219","messageId":"220","endLine":7,"endColumn":24},{"ruleId":"217","severity":1,"message":"226","line":10,"column":17,"nodeType":"219","messageId":"220","endLine":10,"endColumn":30},{"ruleId":"217","severity":1,"message":"227","line":13,"column":10,"nodeType":"219","messageId":"220","endLine":13,"endColumn":27},{"ruleId":"217","severity":1,"message":"228","line":1,"column":45,"nodeType":"219","messageId":"220","endLine":1,"endColumn":53},{"ruleId":"217","severity":1,"message":"229","line":9,"column":10,"nodeType":"219","messageId":"220","endLine":9,"endColumn":22},{"ruleId":"221","severity":1,"message":"230","line":20,"column":6,"nodeType":"223","endLine":20,"endColumn":20,"suggestions":"231"},{"ruleId":"221","severity":1,"message":"230","line":24,"column":6,"nodeType":"223","endLine":24,"endColumn":20,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"230","line":28,"column":6,"nodeType":"223","endLine":28,"endColumn":13,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"234","line":32,"column":6,"nodeType":"223","endLine":32,"endColumn":8,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"236","line":36,"column":6,"nodeType":"223","endLine":36,"endColumn":8,"suggestions":"237"},{"ruleId":"217","severity":1,"message":"238","line":17,"column":10,"nodeType":"219","messageId":"220","endLine":17,"endColumn":21},{"ruleId":"221","severity":1,"message":"239","line":38,"column":5,"nodeType":"223","endLine":38,"endColumn":19,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":84,"column":19,"nodeType":"243","messageId":"244","endLine":84,"endColumn":55},{"ruleId":"221","severity":1,"message":"245","line":95,"column":6,"nodeType":"223","endLine":95,"endColumn":34,"suggestions":"246"},{"ruleId":"217","severity":1,"message":"247","line":1,"column":16,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"248","line":3,"column":8,"nodeType":"219","messageId":"220","endLine":3,"endColumn":13},{"ruleId":"221","severity":1,"message":"249","line":72,"column":6,"nodeType":"223","endLine":72,"endColumn":8,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":83,"column":9,"nodeType":"253","endLine":83,"endColumn":81},{"ruleId":"254","severity":1,"message":"255","line":96,"column":16,"nodeType":"219","messageId":"256","endLine":96,"endColumn":28},{"ruleId":"257","severity":1,"message":"258","line":15,"column":11,"nodeType":"253","messageId":"259","endLine":26,"endColumn":12,"fix":"260"},{"ruleId":"217","severity":1,"message":"247","line":1,"column":23,"nodeType":"219","messageId":"220","endLine":1,"endColumn":32},{"ruleId":"217","severity":1,"message":"228","line":1,"column":34,"nodeType":"219","messageId":"220","endLine":1,"endColumn":42},{"ruleId":"217","severity":1,"message":"261","line":2,"column":26,"nodeType":"219","messageId":"220","endLine":2,"endColumn":40},{"ruleId":"217","severity":1,"message":"262","line":7,"column":3,"nodeType":"219","messageId":"220","endLine":7,"endColumn":20},{"ruleId":"217","severity":1,"message":"263","line":8,"column":3,"nodeType":"219","messageId":"220","endLine":8,"endColumn":24},{"ruleId":"217","severity":1,"message":"264","line":14,"column":8,"nodeType":"219","messageId":"220","endLine":14,"endColumn":12},{"ruleId":"217","severity":1,"message":"265","line":27,"column":24,"nodeType":"219","messageId":"220","endLine":27,"endColumn":39},{"ruleId":"217","severity":1,"message":"266","line":32,"column":18,"nodeType":"219","messageId":"220","endLine":32,"endColumn":24},{"ruleId":"217","severity":1,"message":"263","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":24},{"ruleId":"217","severity":1,"message":"267","line":7,"column":10,"nodeType":"219","messageId":"220","endLine":7,"endColumn":25},{"ruleId":"217","severity":1,"message":"268","line":9,"column":8,"nodeType":"219","messageId":"220","endLine":9,"endColumn":12},{"ruleId":"217","severity":1,"message":"269","line":19,"column":24,"nodeType":"219","messageId":"220","endLine":19,"endColumn":39},{"ruleId":"217","severity":1,"message":"265","line":20,"column":24,"nodeType":"219","messageId":"220","endLine":20,"endColumn":39},{"ruleId":"221","severity":1,"message":"270","line":37,"column":6,"nodeType":"223","endLine":37,"endColumn":20,"suggestions":"271"},{"ruleId":"221","severity":1,"message":"272","line":46,"column":6,"nodeType":"223","endLine":46,"endColumn":16,"suggestions":"273"},{"ruleId":"241","severity":1,"message":"242","line":63,"column":24,"nodeType":"243","messageId":"244","endLine":63,"endColumn":58},{"ruleId":"241","severity":1,"message":"242","line":65,"column":29,"nodeType":"243","messageId":"244","endLine":65,"endColumn":73},{"ruleId":"241","severity":1,"message":"242","line":68,"column":24,"nodeType":"243","messageId":"244","endLine":68,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":70,"column":29,"nodeType":"243","messageId":"244","endLine":70,"endColumn":74},{"ruleId":"241","severity":1,"message":"242","line":73,"column":24,"nodeType":"243","messageId":"244","endLine":73,"endColumn":57},{"ruleId":"241","severity":1,"message":"242","line":75,"column":29,"nodeType":"243","messageId":"244","endLine":75,"endColumn":72},{"ruleId":"217","severity":1,"message":"274","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":25},{"ruleId":"217","severity":1,"message":"275","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":16},{"ruleId":"221","severity":1,"message":"276","line":15,"column":5,"nodeType":"223","endLine":15,"endColumn":7,"suggestions":"277"},{"ruleId":"217","severity":1,"message":"274","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":25},{"ruleId":"217","severity":1,"message":"275","line":5,"column":10,"nodeType":"219","messageId":"220","endLine":5,"endColumn":16},{"ruleId":"221","severity":1,"message":"276","line":15,"column":5,"nodeType":"223","endLine":15,"endColumn":7,"suggestions":"278"},{"ruleId":"217","severity":1,"message":"225","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":24},{"ruleId":"217","severity":1,"message":"262","line":4,"column":3,"nodeType":"219","messageId":"220","endLine":4,"endColumn":20},{"ruleId":"217","severity":1,"message":"263","line":5,"column":3,"nodeType":"219","messageId":"220","endLine":5,"endColumn":24},{"ruleId":"217","severity":1,"message":"267","line":7,"column":10,"nodeType":"219","messageId":"220","endLine":7,"endColumn":25},{"ruleId":"217","severity":1,"message":"268","line":9,"column":8,"nodeType":"219","messageId":"220","endLine":9,"endColumn":12},{"ruleId":"217","severity":1,"message":"227","line":11,"column":10,"nodeType":"219","messageId":"220","endLine":11,"endColumn":27},{"ruleId":"221","severity":1,"message":"279","line":44,"column":5,"nodeType":"223","endLine":44,"endColumn":7,"suggestions":"280"},{"ruleId":"221","severity":1,"message":"281","line":56,"column":5,"nodeType":"223","endLine":56,"endColumn":7,"suggestions":"282"},{"ruleId":"221","severity":1,"message":"283","line":64,"column":6,"nodeType":"223","endLine":64,"endColumn":20,"suggestions":"284"},"no-catch-shadow",["254"],"@typescript-eslint/no-unused-vars","'Panel' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dummyCount', 'setWeather', and 'weatherList'. Either include them or remove the dependency array. You can also do a functional update 'setDummyCount(d => ...)' if you only need 'dummyCount' in the 'setDummyCount' call.","ArrayExpression",["285"],"'useRecoilState' is defined but never used.","'AxiosResponse' is defined but never used.","'openEditFormState' is defined but never used.","'useState' is defined but never used.","'sidebarState' is defined but never used.","React Hook useCallback has a missing dependency: 'setSelectedDate'. Either include it or remove the dependency array.",["286"],["287"],["288"],"React Hook useCallback has a missing dependency: 'setOpenEditForm'. Either include it or remove the dependency array.",["289"],"React Hook useCallback has a missing dependency: 'setMute'. Either include it or remove the dependency array.",["290"],"'sideBarOpen' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setSelectedDate' and 'setSideBarOpen'. Either include them or remove the dependency array.",["291"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","React Hook useLayoutEffect has missing dependencies: 'handleClick', 'lastWeekOfCurrentMonth', 'startWeekOfCurrentMonth', and 'today'. Either include them or remove the dependency array.",["292"],"'useEffect' is defined but never used.","'Image' is defined but never used.","React Hook useCallback has missing dependencies: 'renderEmptyTodo' and 'selectedDate'. Either include them or remove the dependency array.",["293"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-shadow","'scheduleList' is already declared in the upper scope on line 18 column 28.","noShadow","react/self-closing-comp","Empty components are self-closing","notSelfClosing",{"range":"294","text":"295"},"'useRecoilValue' is defined but never used.","'selectedDateState' is defined but never used.","'selectedEditDateState' is defined but never used.","'uuid' is defined but never used.","'setOpenEditForm' is assigned a value but never used.","'errors' is assigned a value but never used.","'UseFormRegister' is defined but never used.","'Icon' is defined but never used.","'setSelectedDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editDateDay', 'editDateMonth', 'editDateYear', 'selectedDate', and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["297"],"'UseFormSetValue' is defined but never used.","'Inputs' is defined but never used.","React Hook useCallback has missing dependencies: 'setEditDate' and 'unit'. Either include them or remove the dependency array. If 'setEditDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["298"],["299"],"React Hook useCallback has a missing dependency: 'addHour'. Either include it or remove the dependency array.",["300"],"React Hook useCallback has a missing dependency: 'subtractHour'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has missing dependencies: 'setValue' and 'type'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["302"],{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"305","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},[755,762]," />",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"324","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [dummyCount, selectedDate, setWeather, weatherList]",{"range":"333","text":"334"},"Update the dependencies array to be: [selectedDate, setSelectedDate]",{"range":"335","text":"336"},{"range":"337","text":"336"},"Update the dependencies array to be: [setSelectedDate, today]",{"range":"338","text":"339"},"Update the dependencies array to be: [setOpenEditForm]",{"range":"340","text":"341"},"Update the dependencies array to be: [setMute]",{"range":"342","text":"343"},"Update the dependencies array to be: [selectedDate, setSelectedDate, setSideBarOpen]",{"range":"344","text":"345"},"Update the dependencies array to be: [selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",{"range":"346","text":"347"},"Update the dependencies array to be: [renderEmptyTodo, selectedDate]",{"range":"348","text":"349"},"Update the dependencies array to be: [editDateDay, editDateMonth, editDateYear, openEditForm, selectedDate, setValue]",{"range":"350","text":"351"},"Update the dependencies array to be: [editDate, setValue]",{"range":"352","text":"353"},"Update the dependencies array to be: [setEditDate, unit]",{"range":"354","text":"355"},{"range":"356","text":"355"},"Update the dependencies array to be: [addHour]",{"range":"357","text":"358"},"Update the dependencies array to be: [subtractHour]",{"range":"359","text":"360"},"Update the dependencies array to be: [hour, minute, setValue, type]",{"range":"361","text":"362"},[744,758],"[dummyCount, selectedDate, setWeather, weatherList]",[936,950],"[selectedDate, setSelectedDate]",[1059,1073],[1149,1156],"[setSelectedDate, today]",[1253,1255],"[setOpenEditForm]",[1340,1342],"[setMute]",[1407,1421],"[selectedDate, setSelectedDate, setSideBarOpen]",[3206,3234],"[selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",[2586,2588],"[renderEmptyTodo, selectedDate]",[1286,1300],"[editDateDay, editDateMonth, editDateYear, openEditForm, selectedDate, setValue]",[1600,1610],"[editDate, setValue]",[491,493],"[setEditDate, unit]",[504,506],[1190,1192],"[addHour]",[1414,1416],"[subtractHour]",[1566,1580],"[hour, minute, setValue, type]"]