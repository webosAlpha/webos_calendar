[{"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\index.tsx":"1","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx":"3","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts":"4","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx":"5","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx":"6","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts":"7","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"8","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx":"9","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts":"10","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts":"11","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts":"12","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx":"13","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx":"14","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx":"15","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts":"16","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx":"17","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx":"18","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx":"19","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx":"20"},{"size":907,"mtime":1669024080143,"results":"21","hashOfConfig":"22"},{"size":415,"mtime":1669024080143,"results":"23","hashOfConfig":"22"},{"size":1334,"mtime":1669024080125,"results":"24","hashOfConfig":"22"},{"size":113,"mtime":1669024080127,"results":"25","hashOfConfig":"22"},{"size":602,"mtime":1669024080147,"results":"26","hashOfConfig":"22"},{"size":433,"mtime":1669024080149,"results":"27","hashOfConfig":"22"},{"size":404,"mtime":1669024080142,"results":"28","hashOfConfig":"22"},{"size":1110,"mtime":1669024080151,"results":"29","hashOfConfig":"22"},{"size":3249,"mtime":1669024080133,"results":"30","hashOfConfig":"22"},{"size":150,"mtime":1669024080130,"results":"31","hashOfConfig":"22"},{"size":165,"mtime":1669024080128,"results":"32","hashOfConfig":"22"},{"size":89,"mtime":1669024080145,"results":"33","hashOfConfig":"22"},{"size":495,"mtime":1669024080135,"results":"34","hashOfConfig":"22"},{"size":3121,"mtime":1669024080134,"results":"35","hashOfConfig":"22"},{"size":1481,"mtime":1669024080136,"results":"36","hashOfConfig":"22"},{"size":147,"mtime":1669024080129,"results":"37","hashOfConfig":"22"},{"size":3701,"mtime":1669024080136,"results":"38","hashOfConfig":"22"},{"size":864,"mtime":1669024080139,"results":"39","hashOfConfig":"22"},{"size":266,"mtime":1669024080138,"results":"40","hashOfConfig":"22"},{"size":819,"mtime":1669024080137,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13g2t4v",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\index.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx",["109"],[],"import { Panel } from \"@enact/sandstone/Panels\";\r\nimport Calendar from \"../../components/Calendar\";\r\nimport WeatherPanel from \"../WeatherPanel/WeatherPanel\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst MainPanel = () => {\r\n\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n        <WeatherPanel />\r\n        {/*<iframe className=\"h-full w-96\" src=\"https://map.naver.com/v5/search/소몽?c=14098341.0446259,4501387.3749584,15,0,0,0,dh&isCorrectAnswer=true\"></iframe>*/}\r\n\r\n        <Panel className=\"h-full px-0\">\r\n            <Calendar />\r\n        </Panel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPanel;\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx",["110"],[],"import { VideoPlayer } from \"@enact/sandstone/VideoPlayer\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\r\nimport { weatherState } from \"../../atoms/weatherAtom\";\r\n\r\nconst WeatherPanel = () => {\r\n  const selectedDate = useRecoilValue(selectedDateState);\r\n\r\n  /* 아래 데이터는 db 구축시 제거될 데이터입니다*/\r\n  const [weather, setWeather] = useRecoilState(weatherState);\r\n  const [dummyCount, setDummyCount] = useState(0);\r\n  const weatherList = [\"Clear\", \"Rain\", \"Clouds\", \"Snow\"];\r\n\r\n  useEffect(() => {\r\n    setDummyCount((dummyCount + 1) % 4);\r\n    setWeather(weatherList[dummyCount]);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <VideoPlayer\r\n      className=\"static opacity-30 bg-black -z-50\"\r\n      autoPlay\r\n      loop\r\n      muted\r\n      disabled\r\n    >\r\n      <source type=\"video/mp4\" src={`${WEATHER_BASEURL}/${weather}.mp4`} />\r\n    </VideoPlayer>\r\n  );\r\n};\r\n\r\nexport default memo(WeatherPanel);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx",["111","112","113","114","115","116"],[],"import React, { createContext, useCallback, useEffect, useState } from \"react\";\r\nimport moment, { Moment } from \"moment\";\r\nimport \"moment/locale/ko\";\r\nimport CalendarHeader from \"./CalendarHeader\";\r\nimport CalendarDays from \"./CalendarDays\";\r\nimport CalendarBody from \"./CalendarBody\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { todayState } from \"../../atoms/todayAtom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { CategoryList, Schedule } from \"../../../typing\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport CalendarSidebar from \"./CalendarSidebar\";\r\nimport _ from \"lodash\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\n\r\ninterface CalendarContextProps {\r\n  sideBarOpen: boolean;\r\n}\r\n\r\nexport const CalendarContext = createContext({} as CalendarContextProps);\r\n\r\nfunction Calendar() {\r\n  const today = useRecoilValue(todayState);\r\n  const [selectedDate, setSelectedDate] =\r\n    useRecoilState<Moment>(selectedDateState);\r\n  const [selectedDateTodo, setSelectedDateTodo] = useState<Schedule[]>();\r\n  const [sideBarOpen, setSideBarOpen] = useState(false);\r\n\r\n  const value = {\r\n    sideBarOpen,\r\n  };\r\n\r\n  const { data: scheduleList } = useQuery<Schedule[]>(\r\n    [\"schedules\", selectedDate.clone().format(\"YYYY MM\")],\r\n    () =>\r\n      axios\r\n        .get(\r\n          `/schedules?year=${selectedDate\r\n            .clone()\r\n            .format(\"YYYY\")}&month=${selectedDate.clone().format(\"MM\")}`\r\n        )\r\n        .then((response: AxiosResponse<Schedule[]>) => {\r\n          console.log(response);\r\n          return response.data;\r\n        })\r\n  );\r\n\r\n  useEffect(() => {\r\n    let newSelectedDateTodo = scheduleList?.filter((schedule) => {\r\n      return (\r\n        Number(selectedDate.format(\"DD\")) <= Number(schedule.day) &&\r\n        Number(selectedDate.format(\"DD\")) + 3 > Number(schedule.day)\r\n      );\r\n    });\r\n    setSelectedDateTodo(\r\n      _.sortBy(newSelectedDateTodo, \"month\", \"day\", \"startedTime\")\r\n    );\r\n  }, [selectedDate]);\r\n\r\n  const prevMonth = useCallback(() => {\r\n    setSelectedDate(selectedDate.clone().subtract(1, \"months\"));\r\n  }, [selectedDate]);\r\n\r\n  const nextMonth = useCallback(() => {\r\n    setSelectedDate(selectedDate.clone().add(1, \"months\"));\r\n  }, [selectedDate]);\r\n\r\n  const setToday = useCallback(() => {\r\n    setSelectedDate(today);\r\n  }, [today]);\r\n\r\n  return (\r\n    <CalendarContext.Provider value={value}>\r\n      <div className=\"h-full flex\">\r\n        <CalendarSidebar selectedDateTodo={selectedDateTodo} />\r\n        <div className=\"h-full flex flex-col flex-1\">\r\n          <CalendarHeader\r\n            selectedDate={selectedDate}\r\n            prevMonth={prevMonth}\r\n            nextMonth={nextMonth}\r\n            setToday={setToday}\r\n          />\r\n          <CalendarDays />\r\n          <CalendarBody\r\n            selectedDate={selectedDate}\r\n            setSelectedDate={setSelectedDate}\r\n            scheduleList={scheduleList}\r\n            setSideBarOpen={setSideBarOpen}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`w-0 transition-all ease-in-out duration-300 m-0 ${\r\n            sideBarOpen && \"-mr-10\"\r\n          }`}\r\n        />\r\n      </div>\r\n    </CalendarContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts",["117"],[],"import { atom } from \"recoil\";\r\nimport moment from \"moment\";\r\n\r\nexport const weatherState = atom({\r\n  key: \"weatherState\",\r\n  default: \"Clear\",\r\n});\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx",["118","119"],[],"import React, { Dispatch, ReactNode, useCallback } from \"react\";\r\nimport moment, { Moment } from \"moment\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { todayState } from \"../../atoms/todayAtom\";\r\nimport { Schedule } from \"../../../typing\";\r\nimport Markers from \"./Markers\";\r\n\r\ninterface Props {\r\n  selectedDate: Moment;\r\n  setSelectedDate: Dispatch<React.SetStateAction<moment.Moment>>;\r\n  scheduleList: Schedule[] | undefined;\r\n  setSideBarOpen: Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nfunction CalendarBody({\r\n  selectedDate,\r\n  setSelectedDate,\r\n  scheduleList,\r\n  setSideBarOpen,\r\n}: Props) {\r\n  const today = useRecoilValue(todayState);\r\n  // 현재 달의 첫 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\r\n  const startWeekOfCurrentMonth = selectedDate.clone().startOf(\"month\").week();\r\n  // 현재 달의 마지막 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\r\n  const lastWeekOfCurrentMonth =\r\n    selectedDate.clone().endOf(\"month\").week() === 1\r\n      ? 53\r\n      : selectedDate.clone().endOf(\"month\").week();\r\n  let calendar: ReactNode[] = [];\r\n\r\n  const handleClick = (date: Moment) => {\r\n    if (date.format(\"L\") === selectedDate.format(\"L\")) {\r\n      setSideBarOpen((prev) => !prev);\r\n    } else {\r\n      setSelectedDate(date);\r\n      setSideBarOpen(true);\r\n    }\r\n  };\r\n\r\n  for (\r\n    let week = startWeekOfCurrentMonth;\r\n    week <= lastWeekOfCurrentMonth;\r\n    week++\r\n  ) {\r\n    calendar.push(\r\n      <div\r\n        key={week}\r\n        className=\"flex flex-1 items-center justify-around w-full relative\"\r\n      >\r\n        {Array(7)\r\n          .fill(0)\r\n          .map((n, index) => {\r\n            let current = selectedDate\r\n              .clone()\r\n              .week(week)\r\n              .startOf(\"week\")\r\n              .add(n + index, \"day\");\r\n            let markers = scheduleList?.filter((schedule) => {\r\n              return (\r\n                schedule.day === current.format(\"DD\") &&\r\n                schedule.month === current.format(\"MM\")\r\n              );\r\n            });\r\n\r\n            return (\r\n              <div\r\n                className={`cell relative ${\r\n                  index === 0 && \"calendar_days_SUN\"\r\n                } ${index === 6 && \"calendar_days_SAT\"} ${\r\n                  current.format() ===\r\n                  selectedDate.clone().startOf(\"day\").format()\r\n                    ? \"selectedDate\"\r\n                    : current.format() === today.clone().startOf(\"day\").format()\r\n                    ? \"today\"\r\n                    : current.format(\"MM\") === selectedDate.format(\"MM\")\r\n                    ? \"\"\r\n                    : \"not_same_month\"\r\n                } `}\r\n                key={current.format()}\r\n                onClick={() => handleClick(current)}\r\n              >\r\n                {current.format(\"D\")}\r\n                <Markers markers={markers} />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col flex-1 pb-10 justify-around w-full\">\r\n      {calendar}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarBody;\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx",["120","121"],[],"import moment from \"moment/moment\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Image from \"@enact/sandstone/Image\";\r\nimport { CalendarContext } from \"./Calendar\";\r\nimport CalendarTodoList from \"./CalendarTodoList\";\r\nimport { Schedule } from \"../../../typing\";\r\nimport EmptyTodo from \"./EmptyTodo\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\r\nimport { weatherState } from \"../../atoms/weatherAtom\";\r\n\r\ninterface Props {\r\n  selectedDateTodo: Schedule[] | undefined;\r\n}\r\n\r\nfunction CalendarSidebar({ selectedDateTodo }: Props) {\r\n  const selectedDate = useRecoilValue(selectedDateState);\r\n  const weather = useRecoilValue(weatherState);\r\n\r\n  const { sideBarOpen } = useContext(CalendarContext);\r\n  // const [todayScheduleList, setTodayScheduleList] = useState<Schedule[]>([]);\r\n  let todayScheduleList: Schedule[] = [];\r\n  let tomorrowScheduleList: Schedule[] = [];\r\n  let dayAfterTomorrowScheduleList: Schedule[] = [];\r\n\r\n  selectedDateTodo?.forEach((schedule) => {\r\n    if (schedule.day === selectedDate.format(\"DD\")) {\r\n      todayScheduleList.push(schedule);\r\n    } else if (Number(schedule.day) === Number(selectedDate.format(\"DD\")) + 1) {\r\n      tomorrowScheduleList.push(schedule);\r\n    } else {\r\n      dayAfterTomorrowScheduleList.push(schedule);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`transition-all ease-in-out overflow-hidden duration-700 whitespace-nowrap -ml-10 h-full ${\r\n        sideBarOpen ? \"w-80\" : \"w-0\"\r\n      }`}\r\n    >\r\n      <div className=\"relative h-44 aspect-video justify-end flex flex-col\">\r\n        <div className=\"sidebar_bg \">\r\n          <Image\r\n            src={`${WEATHER_BASEURL}/${weather}.jpg`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              margin: \"0 0 -7px 0\",\r\n              opacity: \"40%\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"flex flex-col justify-evenly items-end mr-3 mb-3\">\r\n          <p className=\"text-4xl\">\r\n            {moment(selectedDate).locale(\"en-gb\").format(\"YYYY\")}\r\n          </p>\r\n          <p>\r\n            {moment(selectedDate).locale(\"en\").format(\"dddd, MMMM D\")}\r\n            {/*{moment(selectedDate).locale(\"en\").format(\"ll\")}*/}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-h-[75%] px-5 scrollbar-hide overflow-x-hidden\">\r\n        <h1 className=\"todoList_title\">\r\n          {selectedDate.clone().locale(\"en\").format(\"MMM, D\")}&nbsp; TODO\r\n        </h1>\r\n        {todayScheduleList.length > 0 ? (\r\n          todayScheduleList.map((schedule) => (\r\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\r\n          ))\r\n        ) : (\r\n          <EmptyTodo />\r\n        )}\r\n        <h1 className=\"todoList_title\">\r\n          {selectedDate.clone().add(1, \"day\").locale(\"en\").format(\"MMM, D\")}\r\n          &nbsp; TODO\r\n        </h1>\r\n        {tomorrowScheduleList.length > 0 ? (\r\n          tomorrowScheduleList.map((schedule) => (\r\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\r\n          ))\r\n        ) : (\r\n          <EmptyTodo />\r\n        )}\r\n        <h1 className=\"todoList_title\">\r\n          {selectedDate.clone().add(2, \"day\").locale(\"en\").format(\"MMM, D\")}\r\n          &nbsp; TODO\r\n        </h1>\r\n        {dayAfterTomorrowScheduleList.length > 0 ? (\r\n          dayAfterTomorrowScheduleList.map((schedule) => (\r\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\r\n          ))\r\n        ) : (\r\n          <EmptyTodo />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarSidebar;\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx",["122"],[],"import React, { memo } from \"react\";\r\nimport { Schedule } from \"../../../typing\";\r\ninterface Props {\r\n  markers?: Schedule[];\r\n}\r\n\r\nfunction Markers({ markers }: Props) {\r\n  return (\r\n    <div className=\"scheduleMarker_container\">\r\n      {markers && markers?.length > 3 ? (\r\n        <div className=\"scheduleMarker_num\">+{markers.length}</div>\r\n      ) : (\r\n        markers?.map((marker) => (\r\n          <div\r\n            key={marker._id}\r\n            className={`scheduleMarker ${\r\n              marker.category === \"회사\"\r\n                ? \"bg-emerald-200\"\r\n                : marker.category === \"취미\"\r\n                ? \"bg-fuchsia-600\"\r\n                : marker.category === \"학교\"\r\n                ? \"bg-amber-300\"\r\n                : \"\"\r\n            }  `}\r\n          ></div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Markers);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],{"ruleId":"123","severity":1,"message":"124","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":19,"column":6,"nodeType":"129","endLine":19,"endColumn":20,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"132","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":22},{"ruleId":"127","severity":1,"message":"133","line":58,"column":6,"nodeType":"129","endLine":58,"endColumn":20,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":62,"column":6,"nodeType":"129","endLine":62,"endColumn":20,"suggestions":"136"},{"ruleId":"127","severity":1,"message":"135","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":20,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"135","line":70,"column":6,"nodeType":"129","endLine":70,"endColumn":13,"suggestions":"138"},{"ruleId":"123","severity":1,"message":"131","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"139","line":1,"column":38,"nodeType":"125","messageId":"126","endLine":1,"endColumn":49},{"ruleId":"140","severity":1,"message":"141","line":80,"column":17,"nodeType":"142","messageId":"143","endLine":80,"endColumn":53},{"ruleId":"123","severity":1,"message":"124","line":2,"column":29,"nodeType":"125","messageId":"126","endLine":2,"endColumn":38},{"ruleId":"123","severity":1,"message":"144","line":2,"column":40,"nodeType":"125","messageId":"126","endLine":2,"endColumn":48},{"ruleId":"145","severity":1,"message":"146","line":14,"column":11,"nodeType":"147","messageId":"148","endLine":25,"endColumn":12,"fix":"149"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dummyCount', 'setWeather', and 'weatherList'. Either include them or remove the dependency array. You can also do a functional update 'setDummyCount(d => ...)' if you only need 'dummyCount' in the 'setDummyCount' call.","ArrayExpression",["150"],"'moment' is defined but never used.","'CategoryList' is defined but never used.","React Hook useEffect has a missing dependency: 'scheduleList'. Either include it or remove the dependency array.",["151"],"React Hook useCallback has a missing dependency: 'setSelectedDate'. Either include it or remove the dependency array.",["152"],["153"],["154"],"'useCallback' is defined but never used.","react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","'useState' is defined but never used.","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"155","text":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},{"desc":"164","fix":"165"},[767,774]," />","Update the dependencies array to be: [dummyCount, selectedDate, setWeather, weatherList]",{"range":"166","text":"167"},"Update the dependencies array to be: [scheduleList, selectedDate]",{"range":"168","text":"169"},"Update the dependencies array to be: [selectedDate, setSelectedDate]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [setSelectedDate, today]",{"range":"173","text":"174"},[763,777],"[dummyCount, selectedDate, setWeather, weatherList]",[1990,2004],"[scheduleList, selectedDate]",[2122,2136],"[selectedDate, setSelectedDate]",[2249,2263],[2343,2350],"[setSelectedDate, today]"]