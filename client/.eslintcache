[{"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\index.tsx":"1","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx":"3","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts":"4","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx":"5","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx":"6","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts":"7","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"8","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx":"9","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts":"10","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts":"11","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts":"12","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx":"13","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx":"14","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx":"15","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx":"16","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts":"17","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts":"18","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts":"19","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx":"20","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx":"21","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx":"22"},{"size":903,"mtime":1669110677531,"results":"23","hashOfConfig":"24"},{"size":415,"mtime":1669110677532,"results":"25","hashOfConfig":"24"},{"size":1324,"mtime":1669110677485,"results":"26","hashOfConfig":"24"},{"size":111,"mtime":1669110677494,"results":"27","hashOfConfig":"24"},{"size":425,"mtime":1669110677549,"results":"28","hashOfConfig":"24"},{"size":649,"mtime":1669110677541,"results":"29","hashOfConfig":"24"},{"size":400,"mtime":1669110677527,"results":"30","hashOfConfig":"24"},{"size":1108,"mtime":1669110677555,"results":"31","hashOfConfig":"24"},{"size":1367,"mtime":1669115680090,"results":"32","hashOfConfig":"24"},{"size":118,"mtime":1669110677501,"results":"33","hashOfConfig":"24"},{"size":163,"mtime":1669110677496,"results":"34","hashOfConfig":"24"},{"size":89,"mtime":1669110677537,"results":"35","hashOfConfig":"24"},{"size":3081,"mtime":1669110677512,"results":"36","hashOfConfig":"24"},{"size":503,"mtime":1669110677509,"results":"37","hashOfConfig":"24"},{"size":3579,"mtime":1669115680094,"results":"38","hashOfConfig":"24"},{"size":4030,"mtime":1669110677513,"results":"39","hashOfConfig":"24"},{"size":145,"mtime":1669110677500,"results":"40","hashOfConfig":"24"},{"size":110,"mtime":1669110677491,"results":"41","hashOfConfig":"24"},{"size":120,"mtime":1669110677498,"results":"42","hashOfConfig":"24"},{"size":877,"mtime":1669110677519,"results":"43","hashOfConfig":"24"},{"size":819,"mtime":1669110677515,"results":"44","hashOfConfig":"24"},{"size":236,"mtime":1669110677517,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13g2t4v",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\index.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx",["117"],[],"import { VideoPlayer } from \"@enact/sandstone/VideoPlayer\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\r\nimport { weatherState } from \"../../atoms/weatherAtom\";\r\n\r\nconst WeatherPanel = () => {\r\n  const selectedDate = useRecoilValue(selectedDateState);\r\n\r\n  /* 아래 데이터는 db 구축시 제거될 데이터입니다*/\r\n  const [weather, setWeather] = useRecoilState(weatherState);\r\n  const [dummyCount, setDummyCount] = useState(0);\r\n  const weatherList = [\"Clear\", \"Rain\", \"Clouds\", \"Snow\"];\r\n  useEffect(() => {\r\n    setDummyCount((dummyCount + 1) % 4);\r\n    setWeather(weatherList[dummyCount]);\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <VideoPlayer\r\n      className=\"static -z-50 bg-black opacity-30\"\r\n      autoPlay\r\n      loop\r\n      muted\r\n      disabled\r\n    >\r\n      <source type=\"video/mp4\" src={`${WEATHER_BASEURL}/${weather}.mp4`} />\r\n    </VideoPlayer>\r\n  );\r\n};\r\n\r\nexport default memo(WeatherPanel);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx",["118","119","120","121","122","123","124","125"],[],"import React, { memo, useCallback, useMemo, useState } from \"react\";\r\nimport Icon from \"@enact/sandstone/Icon\";\r\nimport Button from \"@enact/sandstone/Button\";\r\nimport { Link } from \"@enact/ui/Routable\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { muteState } from \"../../atoms/muteAtom\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\nimport { todayState } from \"../../atoms/todayAtom\";\r\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\r\n\r\nfunction CalendarHeader() {\r\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\r\n  const [mute, setMute] = useRecoilState(muteState);\r\n  const [sidebarOpen, setSidebarOpen] = useRecoilState(sidebarState);\r\n  const [editFormOpen, setEditFormOpen] = useState(false);\r\n  const today = useRecoilValue(todayState);\r\n\r\n  const prevMonth = useCallback(() => {\r\n    setSelectedDate(selectedDate.clone().subtract(1, \"months\"));\r\n  }, [selectedDate]);\r\n\r\n  const nextMonth = useCallback(() => {\r\n    setSelectedDate(selectedDate.clone().add(1, \"months\"));\r\n  }, [selectedDate]);\r\n\r\n  const setToday = useCallback(() => {\r\n    setSelectedDate(today);\r\n  }, [today]);\r\n\r\n  const handleScheduleClick = useCallback(() => {\r\n    setSidebarOpen(false);\r\n    setEditFormOpen((prev) => !prev);\r\n  }, []);\r\n\r\n  const handleMuteClick = useCallback(() => {\r\n    setMute((prev) => !prev);\r\n  }, []);\r\n\r\n  const renderGearIcon = useMemo(() => {\r\n    return (\r\n      <Link path=\"./setting\">\r\n        <Icon size=\"large\" className=\"cursor-pointer hover:scale-110\">\r\n          gear\r\n        </Icon>\r\n      </Link>\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"flex h-[15%] w-full items-center justify-center\">\r\n      <div className=\"flex flex-1 items-center justify-evenly\">\r\n        {renderGearIcon}\r\n        <Icon\r\n          size=\"large\"\r\n          onClick={handleScheduleClick}\r\n          className=\"cursor-pointer hover:scale-110\"\r\n        >\r\n          scheduler\r\n        </Icon>{\" \"}\r\n        <Icon\r\n          size=\"large\"\r\n          onClick={handleMuteClick}\r\n          className=\"cursor-pointer hover:scale-110\"\r\n        >\r\n          {mute ? \"sound\" : \"soundmute\"}\r\n        </Icon>\r\n      </div>\r\n      <div className=\"flex flex-1 items-center justify-around\">\r\n        <Icon\r\n          onClick={prevMonth}\r\n          size=\"large\"\r\n          className=\"cursor-pointer hover:scale-125\"\r\n        >\r\n          arrowlargeleft\r\n        </Icon>\r\n        <span className=\"flex  items-center text-6xl\">\r\n          {selectedDate.format(\"Y.MM\")}\r\n        </span>\r\n        <Icon\r\n          onClick={nextMonth}\r\n          size=\"large\"\r\n          className=\"cursor-pointer hover:scale-125\"\r\n        >\r\n          arrowlargeright\r\n        </Icon>\r\n      </div>\r\n      <div className=\"flex flex-1 flex-nowrap\">\r\n        <Button size=\"small\" onClick={setToday}>\r\n          Today\r\n        </Button>\r\n        <Button size=\"small\">Weekly</Button>\r\n        <Button size=\"small\">Monthly</Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default memo(CalendarHeader);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx",["126","127","128","129"],[],"import React, {memo, ReactNode, useCallback, useLayoutEffect, useState,} from \"react\";\r\nimport {Moment} from \"moment\";\r\nimport {useRecoilState, useRecoilValue} from \"recoil\";\r\nimport {todayState} from \"../../atoms/todayAtom\";\r\nimport {Schedule} from \"../../../typing\";\r\nimport Markers from \"./Markers\";\r\nimport uuid from \"react-uuid\";\r\nimport {selectedDateState} from \"../../atoms/selectedDateAtom\";\r\nimport {sidebarState} from \"../../atoms/sidebarAtom\";\r\n\r\ninterface Props {\r\n  scheduleList: Schedule[] | undefined;\r\n}\r\n\r\nfunction CalendarBody({ scheduleList }: Props) {\r\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\r\n  const [sideBarOpen, setSideBarOpen] = useRecoilState(sidebarState);\r\n  const [calendar, setCalendar] = useState<ReactNode[]>([]);\r\n  const today = useRecoilValue(todayState);\r\n  // 현재 달의 첫 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\r\n  const startWeekOfCurrentMonth = selectedDate.clone().startOf(\"month\").week();\r\n  // 현재 달의 마지막 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\r\n  const lastWeekOfCurrentMonth =\r\n    selectedDate.clone().endOf(\"month\").week() === 1\r\n      ? 53\r\n      : selectedDate.clone().endOf(\"month\").week();\r\n\r\n  const handleClick = useCallback(\r\n    (date: Moment) => {\r\n\r\n      if (date.format(\"L\") === selectedDate.format(\"L\")) {\r\n        setSideBarOpen((prev) => !prev);\r\n      } else {\r\n        setSelectedDate(date);\r\n        setSideBarOpen(true);\r\n      }\r\n    },\r\n    [selectedDate]\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    let newCalendar: ReactNode[] = [];\r\n    for (\r\n      let week = startWeekOfCurrentMonth;\r\n      week <= lastWeekOfCurrentMonth;\r\n      week++\r\n    ) {\r\n      newCalendar.push(\r\n        <div\r\n          key={week}\r\n          className=\"relative flex w-full flex-1 items-center justify-around\"\r\n        >\r\n          {Array(7)\r\n            .fill(0)\r\n            .map((n, index) => {\r\n              let current = selectedDate\r\n                .clone()\r\n                .week(week)\r\n                .startOf(\"week\")\r\n                .add(n + index, \"day\");\r\n              let markers = scheduleList?.filter((schedule) => {\r\n                return (\r\n                  schedule.day === current.format(\"DD\") &&\r\n                  schedule.month === current.format(\"MM\")\r\n                );\r\n              });\r\n\r\n              return (\r\n                <div\r\n                  className={`cell relative ${\r\n                    index === 0 && \"calendar_days_SUN\"\r\n                  } ${index === 6 && \"calendar_days_SAT\"} ${\r\n                    current.format() ===\r\n                    selectedDate.clone().startOf(\"day\").format()\r\n                      ? \"selectedDate\"\r\n                      : current.format() ===\r\n                        today.clone().startOf(\"day\").format()\r\n                      ? \"today\"\r\n                      : current.format(\"MM\") === selectedDate.format(\"MM\")\r\n                      ? \"\"\r\n                      : \"not_same_month\"\r\n                  } `}\r\n                  key={uuid()}\r\n                  onClick={() => handleClick(current)}\r\n                >\r\n                  {current.format(\"D\")}\r\n                  <Markers markers={markers} />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    }\r\n    setCalendar(newCalendar);\r\n  }, [selectedDate, scheduleList]);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-1 flex-col justify-around pb-10\">\r\n      {calendar}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(CalendarBody);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx",["130","131","132"],[],"import moment from \"moment/moment\";\r\nimport React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport Image from \"@enact/sandstone/Image\";\r\nimport CalendarTodoList from \"./CalendarTodoList\";\r\nimport { Schedule } from \"../../../typing\";\r\nimport EmptyTodo from \"./EmptyTodo\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\r\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\r\nimport { weatherState } from \"../../atoms/weatherAtom\";\r\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\r\nimport uuid from \"react-uuid\";\r\n\r\ninterface Props {\r\n  scheduleList: Schedule[] | undefined;\r\n}\r\n\r\nfunction CalendarSidebar({ scheduleList }: Props) {\r\n  const selectedDate = useRecoilValue(selectedDateState);\r\n  const weather = useRecoilValue(weatherState);\r\n  const sideBarOpen = useRecoilValue(sidebarState);\r\n  const [todayScheduleList, setTodayScheduleList] = useState<Schedule[]>([]);\r\n  const [tomorrowScheduleList, setTomorrowScheduleList] = useState<Schedule[]>(\r\n    []\r\n  );\r\n  const [dayAfterTomorrowScheduleList, setDayAfterTomorrowScheduleList] =\r\n    useState<Schedule[]>([]);\r\n\r\n  useEffect(() => {\r\n    let newTodayScheduleList: Schedule[] = [];\r\n    let newTomorrowScheduleList: Schedule[] = [];\r\n    let newDayAfterTomorrowScheduleList: Schedule[] = [];\r\n\r\n    scheduleList?.forEach((schedule) => {\r\n      if (schedule.day === selectedDate.format(\"DD\")) {\r\n        newTodayScheduleList.push(schedule);\r\n      } else if (\r\n        Number(schedule.day) ===\r\n        Number(selectedDate.clone().add(1, \"day\").format(\"DD\"))\r\n      ) {\r\n        newTomorrowScheduleList.push(schedule);\r\n      } else if (\r\n        Number(schedule.day) ===\r\n        Number(selectedDate.clone().add(2, \"day\").format(\"DD\"))\r\n      ) {\r\n        newDayAfterTomorrowScheduleList.push(schedule);\r\n      }\r\n    });\r\n    setTodayScheduleList(newTodayScheduleList);\r\n    setTomorrowScheduleList(newTomorrowScheduleList);\r\n    setDayAfterTomorrowScheduleList(newDayAfterTomorrowScheduleList);\r\n  }, [selectedDate]);\r\n\r\n  const renderTodoList = useCallback((list: Schedule[], number: number) => {\r\n    return (\r\n      <React.Fragment key={uuid()}>\r\n        <h1 className=\"todoList_title\">\r\n          {selectedDate\r\n            .clone()\r\n            .add(number, \"day\")\r\n            .locale(\"en\")\r\n            .format(\"MMM, D\")}\r\n          &nbsp; TODO\r\n        </h1>\r\n        {list.length > 0\r\n          ? list.map((schedule) => (\r\n              <CalendarTodoList key={uuid()} schedule={schedule} />\r\n            ))\r\n          : renderEmptyTodo}\r\n      </React.Fragment>\r\n    );\r\n  }, []);\r\n\r\n  const renderEmptyTodo = useMemo(() => <EmptyTodo />, []);\r\n\r\n  return (\r\n    <div\r\n      className={`-ml-10 h-full overflow-hidden whitespace-nowrap transition-all duration-700 ease-in-out ${\r\n        sideBarOpen ? \"w-80\" : \"w-0\"\r\n      }`}\r\n    >\r\n      <div className=\"relative flex aspect-video h-44 flex-col justify-end\">\r\n        <div className=\"sidebar_bg \">\r\n          <Image\r\n            src={`${WEATHER_BASEURL}/${weather}.jpg`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              margin: \"0 0 -7px 0\",\r\n              opacity: \"40%\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"mr-3 mb-3 flex flex-col items-end justify-evenly\">\r\n          <p className=\"text-4xl\">\r\n            {moment(selectedDate).locale(\"en-gb\").format(\"YYYY\")}\r\n          </p>\r\n          <p>\r\n            {moment(selectedDate).locale(\"en\").format(\"dddd, MMMM D\")}\r\n            {/*{moment(selectedDate).locale(\"en\").format(\"ll\")}*/}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"max-h-[75%] overflow-x-hidden px-5 scrollbar-hide\">\r\n        {[\r\n          todayScheduleList,\r\n          tomorrowScheduleList,\r\n          dayAfterTomorrowScheduleList,\r\n        ].map((scheduleList, index) => renderTodoList(scheduleList, index))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(CalendarSidebar);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx",["133"],[],"import React, { memo } from \"react\";\r\nimport { Schedule } from \"../../../typing\";\r\n\r\ninterface Props {\r\n  markers?: Schedule[];\r\n}\r\n\r\nfunction Markers({ markers }: Props) {\r\n  return (\r\n    <div className=\"scheduleMarker_container\">\r\n      {markers && markers?.length > 3 ? (\r\n        <div className=\"scheduleMarker_num\">+{markers.length}</div>\r\n      ) : (\r\n        markers?.map((marker) => (\r\n          <div\r\n            key={marker._id}\r\n            className={`scheduleMarker ${\r\n              marker.category === \"회사\"\r\n                ? \"bg-emerald-200\"\r\n                : marker.category === \"취미\"\r\n                ? \"bg-fuchsia-600\"\r\n                : marker.category === \"학교\"\r\n                ? \"bg-amber-300\"\r\n                : \"bg-gray-400\"\r\n            }  `}\r\n          ></div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(Markers);\r\n","C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],"C:\\Users\\sgbee\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],{"ruleId":"134","severity":1,"message":"135","line":18,"column":6,"nodeType":"136","endLine":18,"endColumn":20,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":42,"nodeType":"140","messageId":"141","endLine":5,"endColumn":59},{"ruleId":"138","severity":1,"message":"142","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":21},{"ruleId":"138","severity":1,"message":"143","line":15,"column":10,"nodeType":"140","messageId":"141","endLine":15,"endColumn":22},{"ruleId":"134","severity":1,"message":"144","line":20,"column":6,"nodeType":"136","endLine":20,"endColumn":20,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"144","line":24,"column":6,"nodeType":"136","endLine":24,"endColumn":20,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"144","line":28,"column":6,"nodeType":"136","endLine":28,"endColumn":13,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":8,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"150","line":37,"column":6,"nodeType":"136","endLine":37,"endColumn":8,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":17,"column":10,"nodeType":"140","messageId":"141","endLine":17,"endColumn":21},{"ruleId":"134","severity":1,"message":"153","line":38,"column":5,"nodeType":"136","endLine":38,"endColumn":19,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":84,"column":19,"nodeType":"157","messageId":"158","endLine":84,"endColumn":55},{"ruleId":"134","severity":1,"message":"159","line":95,"column":6,"nodeType":"136","endLine":95,"endColumn":34,"suggestions":"160"},{"ruleId":"134","severity":1,"message":"161","line":52,"column":6,"nodeType":"136","endLine":52,"endColumn":20,"suggestions":"162"},{"ruleId":"134","severity":1,"message":"163","line":72,"column":6,"nodeType":"136","endLine":72,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":109,"column":16,"nodeType":"140","messageId":"167","endLine":109,"endColumn":28},{"ruleId":"168","severity":1,"message":"169","line":15,"column":11,"nodeType":"170","messageId":"171","endLine":26,"endColumn":12,"fix":"172"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dummyCount', 'setWeather', and 'weatherList'. Either include them or remove the dependency array. You can also do a functional update 'setDummyCount(d => ...)' if you only need 'dummyCount' in the 'setDummyCount' call.","ArrayExpression",["173"],"@typescript-eslint/no-unused-vars","'useSetRecoilState' is defined but never used.","Identifier","unusedVar","'sidebarOpen' is assigned a value but never used.","'editFormOpen' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setSelectedDate'. Either include it or remove the dependency array.",["174"],["175"],["176"],"React Hook useCallback has a missing dependency: 'setSidebarOpen'. Either include it or remove the dependency array.",["177"],"React Hook useCallback has a missing dependency: 'setMute'. Either include it or remove the dependency array.",["178"],"'sideBarOpen' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setSelectedDate' and 'setSideBarOpen'. Either include them or remove the dependency array.",["179"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","React Hook useLayoutEffect has missing dependencies: 'handleClick', 'lastWeekOfCurrentMonth', 'startWeekOfCurrentMonth', and 'today'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'scheduleList'. Either include it or remove the dependency array.",["181"],"React Hook useCallback has missing dependencies: 'renderEmptyTodo' and 'selectedDate'. Either include them or remove the dependency array.",["182"],"no-shadow","'scheduleList' is already declared in the upper scope on line 18 column 28.","noShadow","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"183","text":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},[780,787]," />","Update the dependencies array to be: [dummyCount, selectedDate, setWeather, weatherList]",{"range":"204","text":"205"},"Update the dependencies array to be: [selectedDate, setSelectedDate]",{"range":"206","text":"207"},{"range":"208","text":"207"},"Update the dependencies array to be: [setSelectedDate, today]",{"range":"209","text":"210"},"Update the dependencies array to be: [setSidebarOpen]",{"range":"211","text":"212"},"Update the dependencies array to be: [setMute]",{"range":"213","text":"214"},"Update the dependencies array to be: [selectedDate, setSelectedDate, setSideBarOpen]",{"range":"215","text":"216"},"Update the dependencies array to be: [selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",{"range":"217","text":"218"},"Update the dependencies array to be: [scheduleList, selectedDate]",{"range":"219","text":"220"},"Update the dependencies array to be: [renderEmptyTodo, selectedDate]",{"range":"221","text":"222"},[761,775],"[dummyCount, selectedDate, setWeather, weatherList]",[962,976],"[selectedDate, setSelectedDate]",[1089,1103],[1183,1190],"[setSelectedDate, today]",[1319,1321],"[setSidebarOpen]",[1410,1412],"[setMute]",[1444,1458],"[selectedDate, setSelectedDate, setSideBarOpen]",[3300,3328],"[selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",[2059,2073],"[scheduleList, selectedDate]",[2643,2645],"[renderEmptyTodo, selectedDate]"]