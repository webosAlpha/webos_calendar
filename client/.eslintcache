[{"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx":"1","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx":"3","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts":"4","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx":"5","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx":"6","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts":"7","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"8","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx":"9","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx":"10","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx":"11","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts":"12","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx":"13","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx":"14","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx":"15","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx":"16","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx":"17","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts":"18","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts":"19","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts":"20","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts":"21","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts":"22"},{"size":903,"mtime":1669027285527,"results":"23","hashOfConfig":"24"},{"size":415,"mtime":1668991253510,"results":"25","hashOfConfig":"24"},{"size":1281,"mtime":1669099036199,"results":"26","hashOfConfig":"24"},{"size":111,"mtime":1669027285269,"results":"27","hashOfConfig":"24"},{"size":408,"mtime":1669027285729,"results":"28","hashOfConfig":"24"},{"size":626,"mtime":1669027285570,"results":"29","hashOfConfig":"24"},{"size":400,"mtime":1669027285488,"results":"30","hashOfConfig":"24"},{"size":1075,"mtime":1669105003383,"results":"31","hashOfConfig":"24"},{"size":1323,"mtime":1669107540154,"results":"32","hashOfConfig":"24"},{"size":2983,"mtime":1669105976396,"results":"33","hashOfConfig":"24"},{"size":3472,"mtime":1669107721123,"results":"34","hashOfConfig":"24"},{"size":145,"mtime":1669027285646,"results":"35","hashOfConfig":"24"},{"size":503,"mtime":1669027285598,"results":"36","hashOfConfig":"24"},{"size":3915,"mtime":1669105046746,"results":"37","hashOfConfig":"24"},{"size":844,"mtime":1669104088648,"results":"38","hashOfConfig":"24"},{"size":819,"mtime":1669027285312,"results":"39","hashOfConfig":"24"},{"size":227,"mtime":1669027317091,"results":"40","hashOfConfig":"24"},{"size":163,"mtime":1669027285670,"results":"41","hashOfConfig":"24"},{"size":88,"mtime":1668997197151,"results":"42","hashOfConfig":"24"},{"size":112,"mtime":1669027285368,"results":"43","hashOfConfig":"24"},{"size":104,"mtime":1669027285180,"results":"44","hashOfConfig":"24"},{"size":120,"mtime":1669027285551,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"19cjhgb",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"96","usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx",[],[],["118"],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx",["119"],[],"import { VideoPlayer } from \"@enact/sandstone/VideoPlayer\";\nimport { memo, useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\nimport { weatherState } from \"../../atoms/weatherAtom\";\n\nconst WeatherPanel = () => {\n  const selectedDate = useRecoilValue(selectedDateState);\n\n  /* 아래 데이터는 db 구축시 제거될 데이터입니다*/\n  const [weather, setWeather] = useRecoilState(weatherState);\n  const [dummyCount, setDummyCount] = useState(0);\n  const weatherList = [\"Clear\", \"Rain\", \"Clouds\", \"Snow\"];\n  useEffect(() => {\n    setDummyCount((dummyCount + 1) % 4);\n    setWeather(weatherList[dummyCount]);\n  }, [selectedDate]);\n\n  return (\n    <VideoPlayer\n      className=\"static -z-50 bg-black opacity-30\"\n      autoPlay\n      loop\n      muted\n      disabled\n    >\n      <source type=\"video/mp4\" src={`${WEATHER_BASEURL}/${weather}.mp4`} />\n    </VideoPlayer>\n  );\n};\n\nexport default memo(WeatherPanel);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx",["120","121","122","123","124","125","126","127"],[],"import React, { memo, useCallback, useMemo, useState } from \"react\";\nimport Icon from \"@enact/sandstone/Icon\";\nimport Button from \"@enact/sandstone/Button\";\nimport { Link } from \"@enact/ui/Routable\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { muteState } from \"../../atoms/muteAtom\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { todayState } from \"../../atoms/todayAtom\";\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\n\nfunction CalendarHeader() {\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\n  const [mute, setMute] = useRecoilState(muteState);\n  const [sidebarOpen, setSidebarOpen] = useRecoilState(sidebarState);\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const today = useRecoilValue(todayState);\n\n  const prevMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().subtract(1, \"months\"));\n  }, [selectedDate]);\n\n  const nextMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().add(1, \"months\"));\n  }, [selectedDate]);\n\n  const setToday = useCallback(() => {\n    setSelectedDate(today);\n  }, [today]);\n\n  const handleScheduleClick = useCallback(() => {\n    setSidebarOpen(false);\n    setEditFormOpen((prev) => !prev);\n  }, []);\n\n  const handleMuteClick = useCallback(() => {\n    setMute((prev) => !prev);\n  }, []);\n\n  const renderGearIcon = useMemo(() => {\n    return (\n      <Link path=\"./setting\">\n        <Icon size=\"large\" className=\"cursor-pointer hover:scale-110\">\n          gear\n        </Icon>\n      </Link>\n    );\n  }, []);\n\n  return (\n    <header className=\"flex h-[15%] w-full items-center justify-center\">\n      <div className=\"flex flex-1 items-center justify-evenly\">\n        {renderGearIcon}\n        <Icon\n          size=\"large\"\n          onClick={handleScheduleClick}\n          className=\"cursor-pointer hover:scale-110\"\n        >\n          scheduler\n        </Icon>{\" \"}\n        <Icon\n          size=\"large\"\n          onClick={handleMuteClick}\n          className=\"cursor-pointer hover:scale-110\"\n        >\n          {mute ? \"sound\" : \"soundmute\"}\n        </Icon>\n      </div>\n      <div className=\"flex flex-1 items-center justify-around\">\n        <Icon\n          onClick={prevMonth}\n          size=\"large\"\n          className=\"cursor-pointer hover:scale-125\"\n        >\n          arrowlargeleft\n        </Icon>\n        <span className=\"flex  items-center text-6xl\">\n          {selectedDate.format(\"Y.MM\")}\n        </span>\n        <Icon\n          onClick={nextMonth}\n          size=\"large\"\n          className=\"cursor-pointer hover:scale-125\"\n        >\n          arrowlargeright\n        </Icon>\n      </div>\n      <div className=\"flex flex-1 flex-nowrap\">\n        <Button size=\"small\" onClick={setToday}>\n          Today\n        </Button>\n        <Button size=\"small\">Weekly</Button>\n        <Button size=\"small\">Monthly</Button>\n      </div>\n    </header>\n  );\n}\n\nexport default memo(CalendarHeader);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx",["128","129","130","131"],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx",["132"],[],"import React from \"react\";\r\n\r\nfunction CalendarDays() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex w-full h-[8%] items-center\">\r\n      {[\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"].map((days) => (\r\n        <div\r\n          key={days}\r\n          className={`w-full text-center ${\r\n            days === \"SUN\" && \"calendar_days_SUN\"\r\n          } ${days === \"SAT\" && \"calendar_days_SAT\"}`}\r\n        >\r\n          {days}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDays;\r\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx",["133","134","135"],[],"import moment from \"moment/moment\";\nimport React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\nimport Image from \"@enact/sandstone/Image\";\nimport CalendarTodoList from \"./CalendarTodoList\";\nimport { Schedule } from \"../../../typing\";\nimport EmptyTodo from \"./EmptyTodo\";\nimport { useRecoilValue } from \"recoil\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\nimport { weatherState } from \"../../atoms/weatherAtom\";\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\nimport uuid from \"react-uuid\";\n\ninterface Props {\n  scheduleList: Schedule[] | undefined;\n}\n\nfunction CalendarSidebar({ scheduleList }: Props) {\n  const selectedDate = useRecoilValue(selectedDateState);\n  const weather = useRecoilValue(weatherState);\n  const sideBarOpen = useRecoilValue(sidebarState);\n  const [todayScheduleList, setTodayScheduleList] = useState<Schedule[]>([]);\n  const [tomorrowScheduleList, setTomorrowScheduleList] = useState<Schedule[]>(\n    []\n  );\n  const [dayAfterTomorrowScheduleList, setDayAfterTomorrowScheduleList] =\n    useState<Schedule[]>([]);\n\n  useEffect(() => {\n    let newTodayScheduleList: Schedule[] = [];\n    let newTomorrowScheduleList: Schedule[] = [];\n    let newDayAfterTomorrowScheduleList: Schedule[] = [];\n\n    scheduleList?.forEach((schedule) => {\n      if (schedule.day === selectedDate.format(\"DD\")) {\n        newTodayScheduleList.push(schedule);\n      } else if (\n        Number(schedule.day) ===\n        Number(selectedDate.clone().add(1, \"day\").format(\"DD\"))\n      ) {\n        newTomorrowScheduleList.push(schedule);\n      } else if (\n        Number(schedule.day) ===\n        Number(selectedDate.clone().add(2, \"day\").format(\"DD\"))\n      ) {\n        newDayAfterTomorrowScheduleList.push(schedule);\n      }\n    });\n    setTodayScheduleList(newTodayScheduleList);\n    setTomorrowScheduleList(newTomorrowScheduleList);\n    setDayAfterTomorrowScheduleList(newDayAfterTomorrowScheduleList);\n  }, [selectedDate]);\n\n  const renderTodoList = useCallback((list: Schedule[], number: number) => {\n    return (\n      <React.Fragment key={uuid()}>\n        <h1 className=\"todoList_title\">\n          {selectedDate\n            .clone()\n            .add(number, \"day\")\n            .locale(\"en\")\n            .format(\"MMM, D\")}\n          &nbsp; TODO\n        </h1>\n        {list.length > 0\n          ? list.map((schedule) => (\n              <CalendarTodoList key={uuid()} schedule={schedule} />\n            ))\n          : renderEmptyTodo}\n      </React.Fragment>\n    );\n  }, []);\n\n  const renderEmptyTodo = useMemo(() => <EmptyTodo />, []);\n\n  return (\n    <div\n      className={`-ml-10 h-full overflow-hidden whitespace-nowrap transition-all duration-700 ease-in-out ${\n        sideBarOpen ? \"w-80\" : \"w-0\"\n      }`}\n    >\n      <div className=\"relative flex aspect-video h-44 flex-col justify-end\">\n        <div className=\"sidebar_bg \">\n          <Image\n            src={`${WEATHER_BASEURL}/${weather}.jpg`}\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              margin: \"0 0 -7px 0\",\n              opacity: \"40%\",\n            }}\n          />\n        </div>\n        <div className=\"mr-3 mb-3 flex flex-col items-end justify-evenly\">\n          <p className=\"text-4xl\">\n            {moment(selectedDate).locale(\"en-gb\").format(\"YYYY\")}\n          </p>\n          <p>\n            {moment(selectedDate).locale(\"en\").format(\"dddd, MMMM D\")}\n            {/*{moment(selectedDate).locale(\"en\").format(\"ll\")}*/}\n          </p>\n        </div>\n      </div>\n      <div className=\"max-h-[75%] overflow-x-hidden px-5 scrollbar-hide\">\n        {[\n          todayScheduleList,\n          tomorrowScheduleList,\n          dayAfterTomorrowScheduleList,\n        ].map((scheduleList, index) => renderTodoList(scheduleList, index))}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(CalendarSidebar);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx",["136"],[],"import React, { memo } from \"react\";\nimport { Schedule } from \"../../../typing\";\n\ninterface Props {\n  markers?: Schedule[];\n}\n\nfunction Markers({ markers }: Props) {\n  return (\n    <div className=\"scheduleMarker_container\">\n      {markers && markers?.length > 3 ? (\n        <div className=\"scheduleMarker_num\">+{markers.length}</div>\n      ) : (\n        markers?.map((marker) => (\n          <div\n            key={marker._id}\n            className={`scheduleMarker ${\n              marker.category === \"회사\"\n                ? \"bg-emerald-200\"\n                : marker.category === \"취미\"\n                ? \"bg-fuchsia-600\"\n                : marker.category === \"학교\"\n                ? \"bg-amber-300\"\n                : \"bg-gray-400\"\n            }  `}\n          ></div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default memo(Markers);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts",[],[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":18,"column":6,"nodeType":"141","endLine":18,"endColumn":20,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":5,"column":42,"nodeType":"145","messageId":"146","endLine":5,"endColumn":59},{"ruleId":"143","severity":1,"message":"147","line":14,"column":10,"nodeType":"145","messageId":"146","endLine":14,"endColumn":21},{"ruleId":"143","severity":1,"message":"148","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":22},{"ruleId":"139","severity":1,"message":"149","line":20,"column":6,"nodeType":"141","endLine":20,"endColumn":20,"suggestions":"150"},{"ruleId":"139","severity":1,"message":"149","line":24,"column":6,"nodeType":"141","endLine":24,"endColumn":20,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"149","line":28,"column":6,"nodeType":"141","endLine":28,"endColumn":13,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"153","line":33,"column":6,"nodeType":"141","endLine":33,"endColumn":8,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"155","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":8,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"157","line":17,"column":10,"nodeType":"145","messageId":"146","endLine":17,"endColumn":21},{"ruleId":"139","severity":1,"message":"158","line":38,"column":5,"nodeType":"141","endLine":38,"endColumn":19,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":84,"column":19,"nodeType":"162","messageId":"163","endLine":84,"endColumn":55},{"ruleId":"139","severity":1,"message":"164","line":95,"column":6,"nodeType":"141","endLine":95,"endColumn":34,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"167","line":52,"column":6,"nodeType":"141","endLine":52,"endColumn":20,"suggestions":"168"},{"ruleId":"139","severity":1,"message":"169","line":72,"column":6,"nodeType":"141","endLine":72,"endColumn":8,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":109,"column":16,"nodeType":"145","messageId":"173","endLine":109,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":15,"column":11,"nodeType":"176","messageId":"177","endLine":26,"endColumn":12,"fix":"178"},"no-catch-shadow",["171"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dummyCount', 'setWeather', and 'weatherList'. Either include them or remove the dependency array. You can also do a functional update 'setDummyCount(d => ...)' if you only need 'dummyCount' in the 'setDummyCount' call.","ArrayExpression",["179"],"@typescript-eslint/no-unused-vars","'useSetRecoilState' is defined but never used.","Identifier","unusedVar","'sidebarOpen' is assigned a value but never used.","'editFormOpen' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setSelectedDate'. Either include it or remove the dependency array.",["180"],["181"],["182"],"React Hook useCallback has a missing dependency: 'setSidebarOpen'. Either include it or remove the dependency array.",["183"],"React Hook useCallback has a missing dependency: 'setMute'. Either include it or remove the dependency array.",["184"],"'sideBarOpen' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setSelectedDate' and 'setSideBarOpen'. Either include them or remove the dependency array.",["185"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","React Hook useLayoutEffect has missing dependencies: 'handleClick', 'lastWeekOfCurrentMonth', 'startWeekOfCurrentMonth', and 'today'. Either include them or remove the dependency array.",["186"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'scheduleList'. Either include it or remove the dependency array.",["187"],"React Hook useCallback has missing dependencies: 'renderEmptyTodo' and 'selectedDate'. Either include them or remove the dependency array.",["188"],"no-shadow","'scheduleList' is already declared in the upper scope on line 18 column 28.","noShadow","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"189","text":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},[755,762]," />","Update the dependencies array to be: [dummyCount, selectedDate, setWeather, weatherList]",{"range":"210","text":"211"},"Update the dependencies array to be: [selectedDate, setSelectedDate]",{"range":"212","text":"213"},{"range":"214","text":"213"},"Update the dependencies array to be: [setSelectedDate, today]",{"range":"215","text":"216"},"Update the dependencies array to be: [setSidebarOpen]",{"range":"217","text":"218"},"Update the dependencies array to be: [setMute]",{"range":"219","text":"220"},"Update the dependencies array to be: [selectedDate, setSelectedDate, setSideBarOpen]",{"range":"221","text":"222"},"Update the dependencies array to be: [selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",{"range":"223","text":"224"},"Update the dependencies array to be: [scheduleList, selectedDate]",{"range":"225","text":"226"},"Update the dependencies array to be: [renderEmptyTodo, selectedDate]",{"range":"227","text":"228"},[744,758],"[dummyCount, selectedDate, setWeather, weatherList]",[943,957],"[selectedDate, setSelectedDate]",[1066,1080],[1156,1163],"[setSelectedDate, today]",[1287,1289],"[setSidebarOpen]",[1374,1376],"[setMute]",[1407,1421],"[selectedDate, setSelectedDate, setSideBarOpen]",[3205,3233],"[selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",[2008,2022],"[scheduleList, selectedDate]",[2572,2574],"[renderEmptyTodo, selectedDate]"]