[{"D:\\bootcamp\\webOS\\src\\index.tsx":"1","D:\\bootcamp\\webOS\\src\\reportWebVitals.ts":"2","D:\\bootcamp\\webOS\\src\\App\\App.tsx":"3","D:\\bootcamp\\webOS\\src\\components\\Calendar\\Calendar.tsx":"4","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarHeader.tsx":"5","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarDays.tsx":"6","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarBody.tsx":"7","D:\\bootcamp\\webOS\\src\\atoms\\todayAtom.ts":"8","D:\\bootcamp\\webOS\\src\\atoms\\pathAtom.ts":"9","D:\\bootcamp\\webOS\\src\\hooks\\usePath.ts":"10","D:\\bootcamp\\webOS\\src\\views\\MainPanel\\MainPanel.tsx":"11","D:\\bootcamp\\webOS\\src\\views\\SettingPanel\\SettingPanel.tsx":"12","D:\\bootcamp\\webOS\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"13","D:\\bootcamp\\webOS\\src\\components\\Calendar\\Markers.tsx":"14","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarSidebar.tsx":"15","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarTodoList.tsx":"16","D:\\bootcamp\\webOS\\src\\components\\Calendar\\EmptyTodo.tsx":"17"},{"size":874,"mtime":1666793045650,"results":"18","hashOfConfig":"19"},{"size":400,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1102,"mtime":1666870538279,"results":"21","hashOfConfig":"19"},{"size":4126,"mtime":1667188378150,"results":"22","hashOfConfig":"19"},{"size":1424,"mtime":1666792797183,"results":"23","hashOfConfig":"19"},{"size":475,"mtime":1666716684361,"results":"24","hashOfConfig":"19"},{"size":3023,"mtime":1667186930085,"results":"25","hashOfConfig":"19"},{"size":140,"mtime":1666341373229,"results":"26","hashOfConfig":"19"},{"size":107,"mtime":1666348826818,"results":"27","hashOfConfig":"19"},{"size":385,"mtime":1666357104913,"results":"28","hashOfConfig":"19"},{"size":367,"mtime":1666870479306,"results":"29","hashOfConfig":"19"},{"size":416,"mtime":1666538276503,"results":"30","hashOfConfig":"19"},{"size":457,"mtime":1667196592564,"results":"31","hashOfConfig":"19"},{"size":832,"mtime":1667192072746,"results":"32","hashOfConfig":"19"},{"size":3323,"mtime":1667192692549,"results":"33","hashOfConfig":"19"},{"size":788,"mtime":1667192064060,"results":"34","hashOfConfig":"19"},{"size":255,"mtime":1667192648853,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"10ejksi",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\bootcamp\\webOS\\src\\index.tsx",[],[],["92"],"D:\\bootcamp\\webOS\\src\\reportWebVitals.ts",[],[],"D:\\bootcamp\\webOS\\src\\App\\App.tsx",[],[],"D:\\bootcamp\\webOS\\src\\components\\Calendar\\Calendar.tsx",["93","94","95"],[],"import React, { createContext, useCallback, useEffect, useState } from \"react\";\nimport moment, { Moment } from \"moment\";\nimport \"moment/locale/ko\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport CalendarDays from \"./CalendarDays\";\nimport CalendarBody from \"./CalendarBody\";\nimport { useRecoilValue } from \"recoil\";\nimport { todayState } from \"../../atoms/todayAtom\";\nimport { useQuery } from \"react-query\";\nimport { CategoryList, DayOfTheWeek, Schedule } from \"../../../typing\";\nimport axios, { AxiosResponse } from \"axios\";\nimport CalendarSidebar from \"./CalendarSidebar\";\nimport _ from \"lodash\";\n\ninterface CalendarContextProps {\n  sideBarOpen: boolean;\n  selectedDate: Moment;\n}\n\nexport const CalendarContext = createContext({} as CalendarContextProps);\n\nfunction Calendar() {\n  const today = useRecoilValue(todayState);\n  const [selectedDate, setSelectedDate] = useState<Moment>(today);\n  const [selectedDateTodo, setSelectedDateTodo] = useState<Schedule[]>();\n  const [sideBarOpen, setSideBarOpen] = useState(false);\n\n  const value = {\n    sideBarOpen,\n    selectedDate,\n  };\n\n  const { data: scheduleList } = useQuery<Schedule[]>(\n    [\"schedules\", selectedDate.clone().format(\"YYYY MM\")],\n    () =>\n      axios\n        .get(\n          `http://localhost:3001/schedules?year=${selectedDate\n            .clone()\n            .format(\"YYYY\")}&month=${selectedDate.clone().format(\"MM\")}`\n        )\n        .then((response: AxiosResponse<Schedule[]>) => {\n          function dayConverter(\n            dayOfWeek: \"일\" | \"월\" | \"화\" | \"수\" | \"목\" | \"금\" | \"토\"\n          ) {\n            switch (dayOfWeek) {\n              case \"일\":\n                return 0;\n              case \"월\":\n                return 1;\n              case \"화\":\n                return 2;\n              case \"수\":\n                return 3;\n              case \"목\":\n                return 4;\n              case \"금\":\n                return 5;\n              default:\n                return 6;\n            }\n          }\n\n          return response.data.map((schedule): Schedule => {\n            let year = schedule.year;\n            let weekOfYear =\n              moment(`${schedule.year}-${schedule.month}`).week() +\n              (Number(schedule.week) - 1);\n            let dayOfWeek = schedule.dayOfTheWeek;\n            let day = moment(year)\n              .week(weekOfYear)\n              .startOf(\"week\")\n              .day(dayConverter(dayOfWeek))\n              .format(\"DD\");\n\n            return { ...schedule, day: day };\n          });\n        })\n  );\n\n  useEffect(() => {\n    let newSelectedDateTodo = scheduleList?.filter((schedule) => {\n      return (\n        Number(selectedDate.format(\"DD\")) <= Number(schedule.day!) &&\n        Number(selectedDate.format(\"DD\")) + 3 > Number(schedule.day!)\n      );\n    });\n    setSelectedDateTodo(\n      _.sortBy(newSelectedDateTodo, \"month\", \"day\", \"startedTime\")\n    );\n  }, [selectedDate]);\n\n\n  const prevMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().subtract(1, \"months\"));\n  }, [selectedDate]);\n\n  const nextMonth = useCallback(() => {\n    setSelectedDate(selectedDate.clone().add(1, \"months\"));\n  }, [selectedDate]);\n\n  const setToday = useCallback(() => {\n    setSelectedDate(today);\n  }, [today]);\n\n  return (\n    <CalendarContext.Provider value={value}>\n      <div className=\"h-full flex\">\n        <CalendarSidebar selectedDateTodo={selectedDateTodo} />\n        <div className=\"h-full flex flex-col flex-1\">\n          <CalendarHeader\n            selectedDate={selectedDate}\n            prevMonth={prevMonth}\n            nextMonth={nextMonth}\n            setToday={setToday}\n          />\n          <CalendarDays />\n          <CalendarBody\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            scheduleList={scheduleList}\n            setSideBarOpen={setSideBarOpen}\n          />\n        </div>\n        <div\n          className={`w-0 transition-all ease-in-out duration-300 m-0 ${\n            sideBarOpen && \"-mr-10\"\n          }`}\n        />\n      </div>\n    </CalendarContext.Provider>\n  );\n}\n\nexport default Calendar;\n","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarHeader.tsx",[],[],"D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarDays.tsx",[],[],"D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarBody.tsx",["96","97"],[],"import React, { Dispatch, ReactNode, useCallback } from \"react\";\nimport moment, { Moment } from \"moment\";\nimport { useRecoilValue } from \"recoil\";\nimport { todayState } from \"../../atoms/todayAtom\";\nimport { Schedule } from \"../../../typing\";\nimport Markers from \"./Markers\";\n\ninterface Props {\n  selectedDate: Moment;\n  setSelectedDate: Dispatch<React.SetStateAction<moment.Moment>>;\n  scheduleList: Schedule[] | undefined;\n  setSideBarOpen: Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction CalendarBody({\n  selectedDate,\n  setSelectedDate,\n  scheduleList,\n  setSideBarOpen,\n}: Props) {\n  const today = useRecoilValue(todayState);\n  // 현재 달의 첫 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const startWeekOfCurrentMonth = selectedDate.clone().startOf(\"month\").week();\n  // 현재 달의 마지막 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const lastWeekOfCurrentMonth =\n    selectedDate.clone().endOf(\"month\").week() === 1\n      ? 53\n      : selectedDate.clone().endOf(\"month\").week();\n  let calendar: ReactNode[] = [];\n\n  const handleClick = (date: Moment) => {\n    if (date.format(\"L\") === selectedDate.format(\"L\")) {\n      setSideBarOpen((prev) => !prev);\n    } else {\n      setSelectedDate(date);\n      setSideBarOpen(true);\n    }\n  };\n\n  for (\n    let week = startWeekOfCurrentMonth;\n    week <= lastWeekOfCurrentMonth;\n    week++\n  ) {\n    calendar.push(\n      <div\n        key={week}\n        className=\"flex flex-1 items-center justify-around w-full relative\"\n      >\n        {Array(7)\n          .fill(0)\n          .map((n, index) => {\n            let current = selectedDate\n              .clone()\n              .week(week)\n              .startOf(\"week\")\n              .add(n + index, \"day\");\n            let markers = scheduleList?.filter((schedule) => {\n              return (\n                schedule.day === current.format(\"DD\") &&\n                schedule.month === current.format(\"MM\")\n              );\n            });\n\n            return (\n              <div\n                className={`cell relative ${\n                  index === 0 && \"calendar_days_SUN\"\n                } ${index === 6 && \"calendar_days_SAT\"} ${\n                  current.format() ===\n                  selectedDate.clone().startOf(\"day\").format()\n                    ? \"selectedDate\"\n                    : current.format() === today.clone().startOf(\"day\").format()\n                    ? \"today\"\n                    : current.format(\"MM\") === selectedDate.format(\"MM\")\n                    ? \"\"\n                    : \"not_same_month\"\n                } `}\n                key={current.format()}\n                onClick={() => handleClick(current)}\n              >\n                {current.format(\"D\")}\n                <Markers markers={markers} />\n              </div>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col flex-1 pb-10 justify-around w-full\">\n      {calendar}\n    </div>\n  );\n}\n\nexport default CalendarBody;\n","D:\\bootcamp\\webOS\\src\\atoms\\todayAtom.ts",[],[],"D:\\bootcamp\\webOS\\src\\atoms\\pathAtom.ts",[],[],"D:\\bootcamp\\webOS\\src\\hooks\\usePath.ts",[],[],"D:\\bootcamp\\webOS\\src\\views\\MainPanel\\MainPanel.tsx",[],[],"D:\\bootcamp\\webOS\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"D:\\bootcamp\\webOS\\src\\views\\WeatherPanel\\WeatherPanel.tsx",[],[],"D:\\bootcamp\\webOS\\src\\components\\Calendar\\Markers.tsx",["98"],[],"import React, { memo } from \"react\";\nimport { Schedule } from \"../../../typing\";\ninterface Props {\n  markers?: Schedule[];\n}\n\nfunction Markers({ markers }: Props) {\n  return (\n    <div className=\"scheduleMarker_container\">\n      {markers && markers?.length > 3 ? (\n        <div className=\"scheduleMarker_num\">+{markers.length}</div>\n      ) : (\n        markers?.map((marker) => (\n          <div\n            key={marker._id}\n            className={`scheduleMarker ${\n              marker.category === \"회사\"\n                ? \"bg-emerald-200\"\n                : marker.category === \"취미\"\n                ? \"bg-fuchsia-600\"\n                : marker.category === \"학교\"\n                ? \"bg-amber-300\"\n                : \"\"\n            }  `}\n          ></div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default memo(Markers);\n","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarSidebar.tsx",["99","100"],[],"import moment from \"moment/moment\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Image from \"@enact/sandstone/Image\";\nimport { CalendarContext } from \"./Calendar\";\nimport CalendarTodoList from \"./CalendarTodoList\";\nimport { Schedule } from \"../../../typing\";\nimport EmptyTodo from \"./EmptyTodo\";\n\ninterface Props {\n  selectedDateTodo: Schedule[] | undefined;\n}\n\nfunction CalendarSidebar({ selectedDateTodo }: Props) {\n  const { sideBarOpen, selectedDate } = useContext(CalendarContext);\n  // const [todayScheduleList, setTodayScheduleList] = useState<Schedule[]>([]);\n  let todayScheduleList: Schedule[] = [];\n  let tomorrowScheduleList: Schedule[] = [];\n  let dayAfterTomorrowScheduleList: Schedule[] = [];\n\n  selectedDateTodo?.forEach((schedule) => {\n    if (schedule.day === selectedDate.format(\"DD\")) {\n      todayScheduleList.push(schedule);\n    } else if (Number(schedule.day) === Number(selectedDate.format(\"DD\")) + 1) {\n      tomorrowScheduleList.push(schedule);\n    } else {\n      dayAfterTomorrowScheduleList.push(schedule);\n    }\n  });\n\n  return (\n    <div\n      className={`transition-all ease-in-out overflow-hidden duration-700 whitespace-nowrap -ml-10 h-full ${\n        sideBarOpen ? \"w-80\" : \"w-0\"\n      }`}\n    >\n      <div className=\"relative h-44 aspect-video justify-end flex flex-col\">\n        <div className=\"sidebar_bg \">\n          <Image\n            src=\"https://cdn.pixabay.com/photo/2017/08/01/22/38/flash-2568381__340.jpg\"\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              margin: \"0 0 -7px 0\",\n              opacity: \"40%\",\n            }}\n          />\n        </div>\n        <div className=\"flex flex-col justify-evenly items-end mr-3 mb-3\">\n          <p className=\"text-4xl\">\n            {moment(selectedDate).locale(\"en-gb\").format(\"YYYY\")}\n          </p>\n          <p>\n            {moment(selectedDate).locale(\"en\").format(\"dddd, MMMM D\")}\n            {/*{moment(selectedDate).locale(\"en\").format(\"ll\")}*/}\n          </p>\n        </div>\n      </div>\n      <div className=\"max-h-[75%] px-5 scrollbar-hide overflow-x-hidden\">\n        <h1 className=\"todoList_title\">\n          {selectedDate.clone().locale(\"en\").format(\"MMM, D\")}&nbsp; TODO\n        </h1>\n        {todayScheduleList.length > 0 ? (\n          todayScheduleList.map((schedule) => (\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\n          ))\n        ) : (\n          <EmptyTodo />\n        )}\n        <h1 className=\"todoList_title\">\n          {selectedDate.clone().add(1, \"day\").locale(\"en\").format(\"MMM, D\")}\n          &nbsp; TODO\n        </h1>\n        {tomorrowScheduleList.length > 0 ? (\n          tomorrowScheduleList.map((schedule) => (\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\n          ))\n        ) : (\n          <EmptyTodo />\n        )}\n        <h1 className=\"todoList_title\">\n          {selectedDate.clone().add(2, \"day\").locale(\"en\").format(\"MMM, D\")}\n          &nbsp; TODO\n        </h1>\n        {dayAfterTomorrowScheduleList.length > 0 ? (\n          dayAfterTomorrowScheduleList.map((schedule) => (\n            <CalendarTodoList key={schedule._id} schedule={schedule} />\n          ))\n        ) : (\n          <EmptyTodo />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CalendarSidebar;\n","D:\\bootcamp\\webOS\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],"D:\\bootcamp\\webOS\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":22},{"ruleId":"103","severity":1,"message":"107","line":10,"column":24,"nodeType":"105","messageId":"106","endLine":10,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":91,"column":6,"nodeType":"110","endLine":91,"endColumn":20,"suggestions":"111"},{"ruleId":"103","severity":1,"message":"112","line":1,"column":38,"nodeType":"105","messageId":"106","endLine":1,"endColumn":49},{"ruleId":"113","severity":1,"message":"114","line":80,"column":17,"nodeType":"115","messageId":"116","endLine":80,"endColumn":53},{"ruleId":"117","severity":1,"message":"118","line":14,"column":11,"nodeType":"119","messageId":"120","endLine":25,"endColumn":12,"fix":"121"},{"ruleId":"103","severity":1,"message":"122","line":2,"column":29,"nodeType":"105","messageId":"106","endLine":2,"endColumn":38},{"ruleId":"103","severity":1,"message":"123","line":2,"column":40,"nodeType":"105","messageId":"106","endLine":2,"endColumn":48},"no-catch-shadow",["124"],"@typescript-eslint/no-unused-vars","'CategoryList' is defined but never used.","Identifier","unusedVar","'DayOfTheWeek' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scheduleList'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'useCallback' is defined but never used.","react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"126","text":"127"},"'useEffect' is defined but never used.","'useState' is defined but never used.","no-shadow",{"desc":"128","fix":"129"},[743,750]," />","Update the dependencies array to be: [scheduleList, selectedDate]",{"range":"130","text":"131"},[2884,2898],"[scheduleList, selectedDate]"]