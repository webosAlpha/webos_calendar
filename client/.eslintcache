[{"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx":"1","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx":"3","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts":"4","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx":"5","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx":"6","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts":"7","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx":"8","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx":"9","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx":"10","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx":"11","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts":"12","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx":"13","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx":"14","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx":"15","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx":"16","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx":"17","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts":"18","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts":"19","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts":"20","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts":"21","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts":"22"},{"size":903,"mtime":1669027285527,"results":"23","hashOfConfig":"24"},{"size":415,"mtime":1668991253510,"results":"25","hashOfConfig":"24"},{"size":1281,"mtime":1669027285457,"results":"26","hashOfConfig":"24"},{"size":111,"mtime":1669027285269,"results":"27","hashOfConfig":"24"},{"size":408,"mtime":1669027285729,"results":"28","hashOfConfig":"24"},{"size":626,"mtime":1669027285570,"results":"29","hashOfConfig":"24"},{"size":400,"mtime":1669027285488,"results":"30","hashOfConfig":"24"},{"size":1063,"mtime":1669027285625,"results":"31","hashOfConfig":"24"},{"size":1338,"mtime":1669027285202,"results":"32","hashOfConfig":"24"},{"size":2801,"mtime":1669027285695,"results":"33","hashOfConfig":"24"},{"size":3473,"mtime":1669027285407,"results":"34","hashOfConfig":"24"},{"size":145,"mtime":1669027285646,"results":"35","hashOfConfig":"24"},{"size":503,"mtime":1669027285598,"results":"36","hashOfConfig":"24"},{"size":3885,"mtime":1669027430427,"results":"37","hashOfConfig":"24"},{"size":833,"mtime":1669027330118,"results":"38","hashOfConfig":"24"},{"size":819,"mtime":1669027285312,"results":"39","hashOfConfig":"24"},{"size":227,"mtime":1669027317091,"results":"40","hashOfConfig":"24"},{"size":163,"mtime":1669027285670,"results":"41","hashOfConfig":"24"},{"size":88,"mtime":1668997197151,"results":"42","hashOfConfig":"24"},{"size":112,"mtime":1669027285368,"results":"43","hashOfConfig":"24"},{"size":104,"mtime":1669027285180,"results":"44","hashOfConfig":"24"},{"size":120,"mtime":1669027285551,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"19cjhgb",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\index.tsx",[],[],["118"],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\App\\App.tsx",["119"],[],"import { Panels, Routable, Route } from \"@enact/sandstone/Panels\";\nimport ThemeDecorator from \"@enact/sandstone/ThemeDecorator\";\nimport MainPanel from \"../views/MainPanel/MainPanel\";\nimport SettingPanel from \"../views/SettingPanel/SettingPanel\";\nimport { useRecoilState } from \"recoil\";\nimport { pathState } from \"../atoms/pathAtom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// @ts-ignore\nconst RoutablePanels = Routable({ navigate: \"navigate\" }, Panels);\n\nconst queryClient = new QueryClient();\n\naxios.defaults.baseURL = \"http://172.30.1.8:8000\";\n\nconst App = (props: any) => {\n  const [path, setPath] = useRecoilState(pathState);\n  const handleNavigate = useCallback(\n    (ev: any) => {\n      setPath(ev.path);\n    },\n    [setPath]\n  );\n\n  useEffect(() => {\n    addEventListener(\"drag\", (event) => console.log(\"드래그\"));\n  }, []);\n\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <RoutablePanels {...props} path={path} navigate={handleNavigate}>\n        <Route component={MainPanel} path=\"home\">\n          <Route component={SettingPanel} path=\"setting\" />\n        </Route>\n      </RoutablePanels>\n    </QueryClientProvider>\n  );\n};\n\nexport default ThemeDecorator(App);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\pathAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\SettingPanel\\SettingPanel.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\MainPanel\\MainPanel.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\hooks\\usePath.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\views\\WeatherPanel\\WeatherPanel.tsx",["120"],[],"import { VideoPlayer } from \"@enact/sandstone/VideoPlayer\";\nimport { memo, useEffect, useState } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { WEATHER_BASEURL } from \"../../utils/Utils\";\nimport { weatherState } from \"../../atoms/weatherAtom\";\n\nconst WeatherPanel = () => {\n  const selectedDate = useRecoilValue(selectedDateState);\n\n  /* 아래 데이터는 db 구축시 제거될 데이터입니다*/\n  const [weather, setWeather] = useRecoilState(weatherState);\n  const [dummyCount, setDummyCount] = useState(0);\n  const weatherList = [\"Clear\", \"Rain\", \"Clouds\", \"Snow\"];\n  useEffect(() => {\n    setDummyCount((dummyCount + 1) % 4);\n    setWeather(weatherList[dummyCount]);\n  }, [selectedDate]);\n\n  return (\n    <VideoPlayer\n      className=\"static opacity-30 bg-black -z-50\"\n      autoPlay\n      loop\n      muted\n      disabled\n    >\n      <source type=\"video/mp4\" src={`${WEATHER_BASEURL}/${weather}.mp4`} />\n    </VideoPlayer>\n  );\n};\n\nexport default memo(WeatherPanel);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Calendar.tsx",["121","122"],[],"import React from \"react\";\nimport {Moment} from \"moment\";\nimport \"moment/locale/ko\";\nimport CalendarHeader from \"./CalendarHeader\";\nimport CalendarDays from \"./CalendarDays\";\nimport CalendarBody from \"./CalendarBody\";\nimport {useRecoilValue} from \"recoil\";\nimport {useQuery} from \"react-query\";\nimport {Schedule} from \"../../../typing\";\nimport axios, {AxiosResponse} from \"axios\";\nimport CalendarSidebar from \"./CalendarSidebar\";\nimport {selectedDateState} from \"../../atoms/selectedDateAtom\";\n\nfunction Calendar() {\n  const selectedDate = useRecoilValue<Moment>(selectedDateState);\n\n  const { data: scheduleList } = useQuery<Schedule[]>(\n    [\"schedules\", selectedDate.clone().format(\"YYYY MM\")],\n    () =>\n      axios\n        .get(\n          `/sheets?year=${selectedDate\n            .clone()\n            .format(\"YYYY\")}&month=${selectedDate.clone().format(\"MM\")}`\n        )\n        .then((response: AxiosResponse<Schedule[]>) => {\n          console.log(response);\n          return response.data;\n        })\n  );\n\n\n\n  return (\n    <div className=\"flex h-full\">\n      <CalendarSidebar scheduleList={scheduleList} />\n      <div className=\"-mr-10 flex h-full flex-1 flex-col\">\n        <CalendarHeader />\n        <CalendarDays />\n        <CalendarBody scheduleList={scheduleList} />\n      </div>\n    </div>\n  );\n}\n\nexport default Calendar;\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarHeader.tsx",["123","124","125","126","127"],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarBody.tsx",["128","129","130","131","132"],[],"import React, {\n  memo,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport moment, { Moment } from \"moment\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { todayState } from \"../../atoms/todayAtom\";\nimport { Schedule } from \"../../../typing\";\nimport Markers from \"./Markers\";\nimport uuid from \"react-uuid\";\nimport { selectedDateState } from \"../../atoms/selectedDateAtom\";\nimport { sidebarState } from \"../../atoms/sidebarAtom\";\n\ninterface Props {\n  scheduleList: Schedule[] | undefined;\n}\n\nfunction CalendarBody({ scheduleList }: Props) {\n  const [selectedDate, setSelectedDate] = useRecoilState(selectedDateState);\n  const [sideBarOpen, setSideBarOpen] = useRecoilState(sidebarState);\n  const [calendar, setCalendar] = useState<ReactNode[]>([]);\n  const today = useRecoilValue(todayState);\n  // 현재 달의 첫 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const startWeekOfCurrentMonth = selectedDate.clone().startOf(\"month\").week();\n  // 현재 달의 마지막 주가 몇번째 주인지? (ex. 22번쨰 주 or 42번쨰 주 or ...)\n  const lastWeekOfCurrentMonth =\n    selectedDate.clone().endOf(\"month\").week() === 1\n      ? 53\n      : selectedDate.clone().endOf(\"month\").week();\n\n  const handleClick = useCallback(\n    (date: Moment) => {\n\n      if (date.format(\"L\") === selectedDate.format(\"L\")) {\n        setSideBarOpen((prev) => !prev);\n      } else {\n        setSelectedDate(date);\n        setSideBarOpen(true);\n      }\n    },\n    [selectedDate]\n  );\n\n  useLayoutEffect(() => {\n    let newCalendar: ReactNode[] = [];\n    for (\n      let week = startWeekOfCurrentMonth;\n      week <= lastWeekOfCurrentMonth;\n      week++\n    ) {\n      newCalendar.push(\n        <div\n          key={week}\n          className=\"relative flex w-full flex-1 items-center justify-around\"\n        >\n          {Array(7)\n            .fill(0)\n            .map((n, index) => {\n              let current = selectedDate\n                .clone()\n                .week(week)\n                .startOf(\"week\")\n                .add(n + index, \"day\");\n              let markers = scheduleList?.filter((schedule) => {\n                return (\n                  schedule.day === current.format(\"DD\") &&\n                  schedule.month === current.format(\"MM\")\n                );\n              });\n\n              return (\n                <div\n                  className={`cell relative ${\n                    index === 0 && \"calendar_days_SUN\"\n                  } ${index === 6 && \"calendar_days_SAT\"} ${\n                    current.format() ===\n                    selectedDate.clone().startOf(\"day\").format()\n                      ? \"selectedDate\"\n                      : current.format() ===\n                        today.clone().startOf(\"day\").format()\n                      ? \"today\"\n                      : current.format(\"MM\") === selectedDate.format(\"MM\")\n                      ? \"\"\n                      : \"not_same_month\"\n                  } `}\n                  key={uuid()}\n                  onClick={() => handleClick(current)}\n                >\n                  {current.format(\"D\")}\n                  <Markers markers={markers} />\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n    setCalendar(newCalendar);\n  }, [selectedDate, scheduleList]);\n\n\n\n  return (\n    <div className=\"flex w-full flex-1 flex-col justify-around pb-10\">\n      {calendar}\n    </div>\n  );\n}\n\nexport default memo(CalendarBody);\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\todayAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarDays.tsx",["133"],[],"import React from \"react\";\r\n\r\nfunction CalendarDays() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex w-full h-[8%] items-center\">\r\n      {[\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"].map((days) => (\r\n        <div\r\n          key={days}\r\n          className={`w-full text-center ${\r\n            days === \"SUN\" && \"calendar_days_SUN\"\r\n          } ${days === \"SAT\" && \"calendar_days_SAT\"}`}\r\n        >\r\n          {days}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarDays;\r\n","C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarSidebar.tsx",["134","135"],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\Markers.tsx",["136"],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\CalendarTodoList.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\components\\Calendar\\EmptyTodo.tsx",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\selectedDateAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\utils\\Utils.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\weatherAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\muteAtom.ts",[],[],"C:\\Users\\I\\Desktop\\webos_calendar\\client\\src\\atoms\\sidebarAtom.ts",[],[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":30,"column":1,"nodeType":"141","messageId":"142","endLine":30,"endColumn":3,"fix":"143"},{"ruleId":"144","severity":1,"message":"145","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":20,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"152","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":24},{"ruleId":"148","severity":1,"message":"153","line":12,"column":10,"nodeType":"150","messageId":"151","endLine":12,"endColumn":22},{"ruleId":"144","severity":1,"message":"154","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":20,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"154","line":22,"column":6,"nodeType":"146","endLine":22,"endColumn":20,"suggestions":"156"},{"ruleId":"144","severity":1,"message":"154","line":26,"column":6,"nodeType":"146","endLine":26,"endColumn":13,"suggestions":"157"},{"ruleId":"144","severity":1,"message":"158","line":34,"column":6,"nodeType":"146","endLine":34,"endColumn":8,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"160","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":14},{"ruleId":"148","severity":1,"message":"161","line":24,"column":10,"nodeType":"150","messageId":"151","endLine":24,"endColumn":21},{"ruleId":"144","severity":1,"message":"162","line":45,"column":5,"nodeType":"146","endLine":45,"endColumn":19,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":91,"column":19,"nodeType":"166","messageId":"167","endLine":91,"endColumn":55},{"ruleId":"144","severity":1,"message":"168","line":102,"column":6,"nodeType":"146","endLine":102,"endColumn":34,"suggestions":"169"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"170","line":52,"column":6,"nodeType":"146","endLine":52,"endColumn":20,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":109,"column":16,"nodeType":"150","messageId":"174","endLine":109,"endColumn":28},{"ruleId":"175","severity":1,"message":"176","line":15,"column":11,"nodeType":"177","messageId":"178","endLine":26,"endColumn":12,"fix":"179"},"no-catch-shadow",["172"],"no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"180","text":"181"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dummyCount', 'setWeather', and 'weatherList'. Either include them or remove the dependency array. You can also do a functional update 'setDummyCount(d => ...)' if you only need 'dummyCount' in the 'setDummyCount' call.","ArrayExpression",["182"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRecoilState' is defined but never used.","'editFormOpen' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'setSelectedDate'. Either include it or remove the dependency array.",["183"],["184"],["185"],"React Hook useCallback has a missing dependency: 'setMute'. Either include it or remove the dependency array.",["186"],"'moment' is defined but never used.","'sideBarOpen' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setSelectedDate' and 'setSideBarOpen'. Either include them or remove the dependency array.",["187"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","React Hook useLayoutEffect has missing dependencies: 'handleClick', 'lastWeekOfCurrentMonth', 'startWeekOfCurrentMonth', and 'today'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'scheduleList'. Either include it or remove the dependency array.",["189"],"no-shadow","'scheduleList' is already declared in the upper scope on line 18 column 28.","noShadow","react/self-closing-comp","Empty components are self-closing","JSXOpeningElement","notSelfClosing",{"range":"190","text":"191"},[930,932],"",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},[744,751]," />","Update the dependencies array to be: [dummyCount, selectedDate, setWeather, weatherList]",{"range":"207","text":"208"},"Update the dependencies array to be: [selectedDate, setSelectedDate]",{"range":"209","text":"210"},{"range":"211","text":"210"},"Update the dependencies array to be: [setSelectedDate, today]",{"range":"212","text":"213"},"Update the dependencies array to be: [setMute]",{"range":"214","text":"215"},"Update the dependencies array to be: [selectedDate, setSelectedDate, setSideBarOpen]",{"range":"216","text":"217"},"Update the dependencies array to be: [selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",{"range":"218","text":"219"},"Update the dependencies array to be: [scheduleList, selectedDate]",{"range":"220","text":"221"},[744,758],"[dummyCount, selectedDate, setWeather, weatherList]",[786,800],"[selectedDate, setSelectedDate]",[909,923],[999,1006],"[setSelectedDate, today]",[1190,1192],"[setMute]",[1476,1490],"[selectedDate, setSelectedDate, setSideBarOpen]",[3275,3303],"[selectedDate, scheduleList, startWeekOfCurrentMonth, lastWeekOfCurrentMonth, today, handleClick]",[1995,2009],"[scheduleList, selectedDate]"]